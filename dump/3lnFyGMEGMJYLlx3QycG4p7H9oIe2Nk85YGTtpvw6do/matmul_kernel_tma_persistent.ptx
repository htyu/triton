//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	matmul_kernel_tma_persistent // -- Begin function matmul_kernel_tma_persistent
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel_tma_persistent
.visible .entry matmul_kernel_tma_persistent(
	.param .align 64 .b8 matmul_kernel_tma_persistent_param_0[128],
	.param .align 64 .b8 matmul_kernel_tma_persistent_param_1[128],
	.param .align 64 .b8 matmul_kernel_tma_persistent_param_2[128],
	.param .u32 matmul_kernel_tma_persistent_param_3,
	.param .u32 matmul_kernel_tma_persistent_param_4,
	.param .u32 matmul_kernel_tma_persistent_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<52>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<602>;
	.reg .f32 	%f<5420>;
	.reg .b64 	%rd<40>;
	.loc	1 50 0                          // 10-persistent-matmul-WS.py:50:0
$L__func_begin0:
	.loc	1 50 0                          // 10-persistent-matmul-WS.py:50:0

// %bb.0:
	mov.b64 	%rd6, matmul_kernel_tma_persistent_param_0;
	mov.b64 	%rd8, matmul_kernel_tma_persistent_param_1;
	mov.u64 	%rd9, %rd8;
	mov.u64 	%rd10, %rd6;
	ld.param.u32 	%r108, [matmul_kernel_tma_persistent_param_3];
$L__tmp0:
	.loc	1 65 30                         // 10-persistent-matmul-WS.py:65:30
	// begin inline asm
	mov.u32 %r582, %ctaid.x;
	// end inline asm
	ld.param.u32 	%r109, [matmul_kernel_tma_persistent_param_4];
	ld.param.u32 	%r110, [matmul_kernel_tma_persistent_param_5];
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r111, %r109, 255;
	add.s32 	%r112, %r108, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r113, %r112, 31;
	shr.u32 	%r114, %r113, 25;
	add.s32 	%r115, %r112, %r114;
	shr.s32 	%r2, %r115, 7;
	shr.s32 	%r116, %r111, 31;
	shr.u32 	%r117, %r116, 24;
	add.s32 	%r118, %r111, %r117;
	shr.s32 	%r119, %r118, 8;
$L__tmp2:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r121, %r110, 127;
$L__tmp3:
	.loc	1 69 28                         // 10-persistent-matmul-WS.py:69:28
	mul.lo.s32 	%r122, %r119, %r2;
	.loc	1 71 32                         // 10-persistent-matmul-WS.py:71:32
	shr.s32 	%r123, %r121, 31;
	shr.u32 	%r124, %r123, 25;
	add.s32 	%r125, %r121, %r124;
	shr.s32 	%r126, %r125, 7;
	mul.hi.s32 	%r127, %r122, 1041204193;
	.loc	1 72 31                         // 10-persistent-matmul-WS.py:72:31
	shr.u32 	%r128, %r127, 31;
	shr.s32 	%r129, %r127, 5;
	add.s32 	%r130, %r129, %r128;
	mul.lo.s32 	%r131, %r130, 132;
	sub.s32 	%r132, %r122, %r131;
	.loc	1 72 19                         // 10-persistent-matmul-WS.py:72:19
	setp.lt.s32 	%p11, %r582, %r132;
	.loc	1 72 7                          // 10-persistent-matmul-WS.py:72:7
	selp.u32 	%r133, 1, 0, %p11;
	add.s32 	%r134, %r130, %r133;
	.loc	1 83 38                         // 10-persistent-matmul-WS.py:83:38
	shl.b32 	%r6, %r119, 3;
	.loc	1 87 32                         // 10-persistent-matmul-WS.py:87:32
	mul.lo.s32 	%r3, %r134, %r126;
	.loc	1 88 38                         // 10-persistent-matmul-WS.py:88:38
	add.s32 	%r4, %r126, -1;
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	mov.u32 	%r5, %tid.x;
	setp.eq.s32 	%p48, %r5, 0;
	mov.u32 	%r98, global_smem;
	add.s32 	%r93, %r98, 196608;
	// begin inline asm
	@%p48 mbarrier.init.shared::cta.b64 [%r93], 1;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r157, %r98, 196616;
	// begin inline asm
	@%p48 mbarrier.init.shared::cta.b64 [%r157], 1;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r178, %r98, 196624;
	// begin inline asm
	@%p48 mbarrier.init.shared::cta.b64 [%r178], 1;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r96, %r98, 196632;
	// begin inline asm
	@%p48 mbarrier.init.shared::cta.b64 [%r96], 1;
	// end inline asm
	setp.gt.s32 	%p12, %r3, 0;
	.loc	1 91 34                         // 10-persistent-matmul-WS.py:91:34
	div.s32 	%r135, %r582, %r6;
	.loc	1 92 37                         // 10-persistent-matmul-WS.py:92:37
	shl.b32 	%r136, %r135, 3;
	.loc	1 93 43                         // 10-persistent-matmul-WS.py:93:43
	sub.s32 	%r137, %r2, %r136;
	.loc	1 93 56                         // 10-persistent-matmul-WS.py:93:56
	min.s32 	%r138, %r137, 8;
	.loc	1 94 45                         // 10-persistent-matmul-WS.py:94:45
	rem.s32 	%r139, %r582, %r138;
	.loc	1 94 35                         // 10-persistent-matmul-WS.py:94:35
	add.s32 	%r140, %r136, %r139;
	.loc	1 95 31                         // 10-persistent-matmul-WS.py:95:31
	mul.lo.s32 	%r141, %r135, %r6;
	sub.s32 	%r142, %r582, %r141;
	.loc	1 95 52                         // 10-persistent-matmul-WS.py:95:52
	div.s32 	%r143, %r142, %r138;
	.loc	1 97 30                         // 10-persistent-matmul-WS.py:97:30
	shl.b32 	%r588, %r140, 7;
	.loc	1 98 30                         // 10-persistent-matmul-WS.py:98:30
	shl.b32 	%r586, %r143, 8;
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	bar.sync 	0;
	and.pred  	%p7, %p48, %p12;
	// begin inline asm
	@%p7 mbarrier.arrive.expect_tx.shared.b64 _, [%r93], 49152;
	// end inline asm
	.loc	1 102 106                       // 10-persistent-matmul-WS.py:102:106
	bar.sync 	0;
	shr.u32 	%r9, %r5, 5;
	shfl.sync.idx.b32	%r144, %r9, 0, 31, -1;
	// begin inline asm
	elect.sync _|%p8, 0xffffffff;
	// end inline asm
	and.pred  	%p13, %p12, %p8;
	setp.lt.u32 	%p14, %r5, 32;
	and.pred  	%p9, %p14, %p13;
	cvta.param.u64 	%rd31, %rd10;
	mov.b32 	%r99, 0;
	// begin inline asm
	@%p9 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r98], [%rd31, {%r99, %r588}], [%r93];
	// end inline asm
	.loc	1 103 106                       // 10-persistent-matmul-WS.py:103:106
	bar.sync 	0;
	shfl.sync.idx.b32	%r145, %r9, 0, 31, -1;
	cvta.param.u64 	%rd32, %rd9;
	add.s32 	%r102, %r98, 65536;
	// begin inline asm
	@%p9 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r102], [%rd32, {%r99, %r586}], [%r93];
	// end inline asm
	.loc	1 88 0                          // 10-persistent-matmul-WS.py:88:0
	setp.ne.s32 	%p15, %r4, 0;
	mov.b32 	%r578, 128;
	mov.b32 	%r577, 2;
	mov.u32 	%r587, %r588;
	mov.u32 	%r585, %r586;
	.loc	1 89 11                         // 10-persistent-matmul-WS.py:89:11
	@%p15 bra 	$L__BB0_2;
// %bb.1:
	.loc	1 90 23                         // 10-persistent-matmul-WS.py:90:23
	add.s32 	%r582, %r582, 132;
	.loc	1 91 34                         // 10-persistent-matmul-WS.py:91:34
	div.s32 	%r148, %r582, %r6;
	.loc	1 92 37                         // 10-persistent-matmul-WS.py:92:37
	shl.b32 	%r149, %r148, 3;
	.loc	1 93 43                         // 10-persistent-matmul-WS.py:93:43
	sub.s32 	%r150, %r2, %r149;
	.loc	1 93 56                         // 10-persistent-matmul-WS.py:93:56
	min.s32 	%r151, %r150, 8;
	.loc	1 94 45                         // 10-persistent-matmul-WS.py:94:45
	rem.s32 	%r152, %r582, %r151;
	.loc	1 94 35                         // 10-persistent-matmul-WS.py:94:35
	add.s32 	%r153, %r149, %r152;
	.loc	1 95 31                         // 10-persistent-matmul-WS.py:95:31
	mul.lo.s32 	%r154, %r148, %r6;
	sub.s32 	%r155, %r582, %r154;
	.loc	1 95 52                         // 10-persistent-matmul-WS.py:95:52
	div.s32 	%r156, %r155, %r151;
	.loc	1 97 30                         // 10-persistent-matmul-WS.py:97:30
	shl.b32 	%r587, %r153, 7;
	.loc	1 98 30                         // 10-persistent-matmul-WS.py:98:30
	shl.b32 	%r585, %r156, 8;
	mov.b32 	%r577, 1;
	mov.u32 	%r578, %r99;
$L__BB0_2:
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	setp.gt.s32 	%p19, %r3, 1;
	bar.sync 	0;
	and.pred  	%p16, %p48, %p19;
	// begin inline asm
	@%p16 mbarrier.arrive.expect_tx.shared.b64 _, [%r157], 49152;
	// end inline asm
	.loc	1 102 106                       // 10-persistent-matmul-WS.py:102:106
	bar.sync 	0;
	shfl.sync.idx.b32	%r167, %r9, 0, 31, -1;
	and.pred  	%p22, %p19, %p8;
	and.pred  	%p17, %p14, %p22;
	add.s32 	%r158, %r98, 16384;
	// begin inline asm
	@%p17 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r158], [%rd31, {%r578, %r587}], [%r157];
	// end inline asm
	.loc	1 103 106                       // 10-persistent-matmul-WS.py:103:106
	bar.sync 	0;
	shfl.sync.idx.b32	%r168, %r9, 0, 31, -1;
	add.s32 	%r162, %r98, 98304;
	// begin inline asm
	@%p17 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r162], [%rd32, {%r578, %r585}], [%r157];
	// end inline asm
	.loc	1 88 28                         // 10-persistent-matmul-WS.py:88:28
	setp.gt.u32 	%p23, %r4, 1;
	setp.lt.u32 	%p24, %r4, 2;
	.loc	1 88 44                         // 10-persistent-matmul-WS.py:88:44
	selp.b32 	%r597, 0, %r577, %p24;
	mov.u32 	%r595, %r587;
	mov.u32 	%r594, %r585;
	.loc	1 89 11                         // 10-persistent-matmul-WS.py:89:11
	@%p23 bra 	$L__BB0_4;
// %bb.3:
	.loc	1 90 23                         // 10-persistent-matmul-WS.py:90:23
	add.s32 	%r582, %r582, 132;
	.loc	1 91 34                         // 10-persistent-matmul-WS.py:91:34
	div.s32 	%r169, %r582, %r6;
	.loc	1 92 37                         // 10-persistent-matmul-WS.py:92:37
	shl.b32 	%r170, %r169, 3;
	.loc	1 93 43                         // 10-persistent-matmul-WS.py:93:43
	sub.s32 	%r171, %r2, %r170;
	.loc	1 93 56                         // 10-persistent-matmul-WS.py:93:56
	min.s32 	%r172, %r171, 8;
	.loc	1 94 45                         // 10-persistent-matmul-WS.py:94:45
	rem.s32 	%r173, %r582, %r172;
	.loc	1 94 35                         // 10-persistent-matmul-WS.py:94:35
	add.s32 	%r174, %r170, %r173;
	.loc	1 95 31                         // 10-persistent-matmul-WS.py:95:31
	mul.lo.s32 	%r175, %r169, %r6;
	sub.s32 	%r176, %r582, %r175;
	.loc	1 95 52                         // 10-persistent-matmul-WS.py:95:52
	div.s32 	%r177, %r176, %r172;
	.loc	1 97 30                         // 10-persistent-matmul-WS.py:97:30
	shl.b32 	%r595, %r174, 7;
	.loc	1 98 30                         // 10-persistent-matmul-WS.py:98:30
	shl.b32 	%r594, %r177, 8;
$L__BB0_4:
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	setp.gt.s32 	%p28, %r3, 2;
	setp.lt.s32 	%p30, %r3, 1;
	.loc	1 100 22                        // 10-persistent-matmul-WS.py:100:22
	shl.b32 	%r180, %r597, 7;
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	bar.sync 	0;
	and.pred  	%p25, %p48, %p28;
	// begin inline asm
	@%p25 mbarrier.arrive.expect_tx.shared.b64 _, [%r178], 49152;
	// end inline asm
	.loc	1 102 106                       // 10-persistent-matmul-WS.py:102:106
	bar.sync 	0;
	shfl.sync.idx.b32	%r188, %r9, 0, 31, -1;
	and.pred  	%p32, %p28, %p8;
	and.pred  	%p26, %p14, %p32;
	add.s32 	%r179, %r98, 32768;
	// begin inline asm
	@%p26 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r179], [%rd31, {%r180, %r595}], [%r178];
	// end inline asm
	.loc	1 103 106                       // 10-persistent-matmul-WS.py:103:106
	bar.sync 	0;
	shfl.sync.idx.b32	%r189, %r9, 0, 31, -1;
	add.s32 	%r183, %r98, 131072;
	// begin inline asm
	@%p26 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r183], [%rd32, {%r180, %r594}], [%r178];
	// end inline asm
	mov.f32 	%f4652, 0f00000000;
	mov.f32 	%f4653, %f4652;
	mov.f32 	%f4654, %f4652;
	mov.f32 	%f4655, %f4652;
	mov.f32 	%f4656, %f4652;
	mov.f32 	%f4657, %f4652;
	mov.f32 	%f4658, %f4652;
	mov.f32 	%f4659, %f4652;
	mov.f32 	%f4660, %f4652;
	mov.f32 	%f4661, %f4652;
	mov.f32 	%f4662, %f4652;
	mov.f32 	%f4663, %f4652;
	mov.f32 	%f4664, %f4652;
	mov.f32 	%f4665, %f4652;
	mov.f32 	%f4666, %f4652;
	mov.f32 	%f4667, %f4652;
	mov.f32 	%f4668, %f4652;
	mov.f32 	%f4669, %f4652;
	mov.f32 	%f4670, %f4652;
	mov.f32 	%f4671, %f4652;
	mov.f32 	%f4672, %f4652;
	mov.f32 	%f4673, %f4652;
	mov.f32 	%f4674, %f4652;
	mov.f32 	%f4675, %f4652;
	mov.f32 	%f4676, %f4652;
	mov.f32 	%f4677, %f4652;
	mov.f32 	%f4678, %f4652;
	mov.f32 	%f4679, %f4652;
	mov.f32 	%f4680, %f4652;
	mov.f32 	%f4681, %f4652;
	mov.f32 	%f4682, %f4652;
	mov.f32 	%f4683, %f4652;
	mov.f32 	%f4684, %f4652;
	mov.f32 	%f4685, %f4652;
	mov.f32 	%f4686, %f4652;
	mov.f32 	%f4687, %f4652;
	mov.f32 	%f4688, %f4652;
	mov.f32 	%f4689, %f4652;
	mov.f32 	%f4690, %f4652;
	mov.f32 	%f4691, %f4652;
	mov.f32 	%f4692, %f4652;
	mov.f32 	%f4693, %f4652;
	mov.f32 	%f4694, %f4652;
	mov.f32 	%f4695, %f4652;
	mov.f32 	%f4696, %f4652;
	mov.f32 	%f4697, %f4652;
	mov.f32 	%f4698, %f4652;
	mov.f32 	%f4699, %f4652;
	mov.f32 	%f4700, %f4652;
	mov.f32 	%f4701, %f4652;
	mov.f32 	%f4702, %f4652;
	mov.f32 	%f4703, %f4652;
	mov.f32 	%f4704, %f4652;
	mov.f32 	%f4705, %f4652;
	mov.f32 	%f4706, %f4652;
	mov.f32 	%f4707, %f4652;
	mov.f32 	%f4708, %f4652;
	mov.f32 	%f4709, %f4652;
	mov.f32 	%f4710, %f4652;
	mov.f32 	%f4711, %f4652;
	mov.f32 	%f4712, %f4652;
	mov.f32 	%f4713, %f4652;
	mov.f32 	%f4714, %f4652;
	mov.f32 	%f4715, %f4652;
	mov.f32 	%f4716, %f4652;
	mov.f32 	%f4717, %f4652;
	mov.f32 	%f4718, %f4652;
	mov.f32 	%f4719, %f4652;
	mov.f32 	%f4720, %f4652;
	mov.f32 	%f4721, %f4652;
	mov.f32 	%f4722, %f4652;
	mov.f32 	%f4723, %f4652;
	mov.f32 	%f4724, %f4652;
	mov.f32 	%f4725, %f4652;
	mov.f32 	%f4726, %f4652;
	mov.f32 	%f4727, %f4652;
	mov.f32 	%f4728, %f4652;
	mov.f32 	%f4729, %f4652;
	mov.f32 	%f4730, %f4652;
	mov.f32 	%f4731, %f4652;
	mov.f32 	%f4732, %f4652;
	mov.f32 	%f4733, %f4652;
	mov.f32 	%f4734, %f4652;
	mov.f32 	%f4735, %f4652;
	mov.f32 	%f4736, %f4652;
	mov.f32 	%f4737, %f4652;
	mov.f32 	%f4738, %f4652;
	mov.f32 	%f4739, %f4652;
	mov.f32 	%f4740, %f4652;
	mov.f32 	%f4741, %f4652;
	mov.f32 	%f4742, %f4652;
	mov.f32 	%f4743, %f4652;
	mov.f32 	%f4744, %f4652;
	mov.f32 	%f4745, %f4652;
	mov.f32 	%f4746, %f4652;
	mov.f32 	%f4747, %f4652;
	mov.f32 	%f4748, %f4652;
	mov.f32 	%f4749, %f4652;
	mov.f32 	%f4750, %f4652;
	mov.f32 	%f4751, %f4652;
	mov.f32 	%f4752, %f4652;
	mov.f32 	%f4753, %f4652;
	mov.f32 	%f4754, %f4652;
	mov.f32 	%f4755, %f4652;
	mov.f32 	%f4756, %f4652;
	mov.f32 	%f4757, %f4652;
	mov.f32 	%f4758, %f4652;
	mov.f32 	%f4759, %f4652;
	mov.f32 	%f4760, %f4652;
	mov.f32 	%f4761, %f4652;
	mov.f32 	%f4762, %f4652;
	mov.f32 	%f4763, %f4652;
	mov.f32 	%f4764, %f4652;
	mov.f32 	%f4765, %f4652;
	mov.f32 	%f4766, %f4652;
	mov.f32 	%f4767, %f4652;
	mov.f32 	%f4768, %f4652;
	mov.f32 	%f4769, %f4652;
	mov.f32 	%f4770, %f4652;
	mov.f32 	%f4771, %f4652;
	mov.f32 	%f4772, %f4652;
	mov.f32 	%f4773, %f4652;
	mov.f32 	%f4774, %f4652;
	mov.f32 	%f4775, %f4652;
	mov.f32 	%f4776, %f4652;
	mov.f32 	%f4777, %f4652;
	mov.f32 	%f4778, %f4652;
	mov.f32 	%f4779, %f4652;
	mov.f32 	%f4780, %f4652;
	mov.f32 	%f4781, %f4652;
	mov.f32 	%f4782, %f4652;
	mov.f32 	%f4783, %f4652;
	mov.f32 	%f4784, %f4652;
	mov.f32 	%f4785, %f4652;
	mov.f32 	%f4786, %f4652;
	mov.f32 	%f4787, %f4652;
	mov.f32 	%f4788, %f4652;
	mov.f32 	%f4789, %f4652;
	mov.f32 	%f4790, %f4652;
	mov.f32 	%f4791, %f4652;
	mov.f32 	%f4792, %f4652;
	mov.f32 	%f4793, %f4652;
	mov.f32 	%f4794, %f4652;
	mov.f32 	%f4795, %f4652;
	mov.f32 	%f4796, %f4652;
	mov.f32 	%f4797, %f4652;
	mov.f32 	%f4798, %f4652;
	mov.f32 	%f4799, %f4652;
	mov.f32 	%f4800, %f4652;
	mov.f32 	%f4801, %f4652;
	mov.f32 	%f4802, %f4652;
	mov.f32 	%f4803, %f4652;
	mov.f32 	%f4804, %f4652;
	mov.f32 	%f4805, %f4652;
	mov.f32 	%f4806, %f4652;
	mov.f32 	%f4807, %f4652;
	mov.f32 	%f4808, %f4652;
	mov.f32 	%f4809, %f4652;
	mov.f32 	%f4810, %f4652;
	mov.f32 	%f4811, %f4652;
	mov.f32 	%f4812, %f4652;
	mov.f32 	%f4813, %f4652;
	mov.f32 	%f4814, %f4652;
	mov.f32 	%f4815, %f4652;
	mov.f32 	%f4816, %f4652;
	mov.f32 	%f4817, %f4652;
	mov.f32 	%f4818, %f4652;
	mov.f32 	%f4819, %f4652;
	mov.f32 	%f4820, %f4652;
	mov.f32 	%f4821, %f4652;
	mov.f32 	%f4822, %f4652;
	mov.f32 	%f4823, %f4652;
	mov.f32 	%f4824, %f4652;
	mov.f32 	%f4825, %f4652;
	mov.f32 	%f4826, %f4652;
	mov.f32 	%f4827, %f4652;
	mov.f32 	%f4828, %f4652;
	mov.f32 	%f4829, %f4652;
	mov.f32 	%f4830, %f4652;
	mov.f32 	%f4831, %f4652;
	mov.f32 	%f4832, %f4652;
	mov.f32 	%f4833, %f4652;
	mov.f32 	%f4834, %f4652;
	mov.f32 	%f4835, %f4652;
	mov.f32 	%f4836, %f4652;
	mov.f32 	%f4837, %f4652;
	mov.f32 	%f4838, %f4652;
	mov.f32 	%f4839, %f4652;
	mov.f32 	%f4840, %f4652;
	mov.f32 	%f4841, %f4652;
	mov.f32 	%f4842, %f4652;
	mov.f32 	%f4843, %f4652;
	mov.f32 	%f4844, %f4652;
	mov.f32 	%f4845, %f4652;
	mov.f32 	%f4846, %f4652;
	mov.f32 	%f4847, %f4652;
	mov.f32 	%f4848, %f4652;
	mov.f32 	%f4849, %f4652;
	mov.f32 	%f4850, %f4652;
	mov.f32 	%f4851, %f4652;
	mov.f32 	%f4852, %f4652;
	mov.f32 	%f4853, %f4652;
	mov.f32 	%f4854, %f4652;
	mov.f32 	%f4855, %f4652;
	mov.f32 	%f4856, %f4652;
	mov.f32 	%f4857, %f4652;
	mov.f32 	%f4858, %f4652;
	mov.f32 	%f4859, %f4652;
	mov.f32 	%f4860, %f4652;
	mov.f32 	%f4861, %f4652;
	mov.f32 	%f4862, %f4652;
	mov.f32 	%f4863, %f4652;
	mov.f32 	%f4864, %f4652;
	mov.f32 	%f4865, %f4652;
	mov.f32 	%f4866, %f4652;
	mov.f32 	%f4867, %f4652;
	mov.f32 	%f4868, %f4652;
	mov.f32 	%f4869, %f4652;
	mov.f32 	%f4870, %f4652;
	mov.f32 	%f4871, %f4652;
	mov.f32 	%f4872, %f4652;
	mov.f32 	%f4873, %f4652;
	mov.f32 	%f4874, %f4652;
	mov.f32 	%f4875, %f4652;
	mov.f32 	%f4876, %f4652;
	mov.f32 	%f4877, %f4652;
	mov.f32 	%f4878, %f4652;
	mov.f32 	%f4879, %f4652;
	mov.f32 	%f4880, %f4652;
	mov.f32 	%f4881, %f4652;
	mov.f32 	%f4882, %f4652;
	mov.f32 	%f4883, %f4652;
	mov.f32 	%f4884, %f4652;
	mov.f32 	%f4885, %f4652;
	mov.f32 	%f4886, %f4652;
	mov.f32 	%f4887, %f4652;
	mov.f32 	%f4888, %f4652;
	mov.f32 	%f4889, %f4652;
	mov.f32 	%f4890, %f4652;
	mov.f32 	%f4891, %f4652;
	mov.f32 	%f4892, %f4652;
	mov.f32 	%f4893, %f4652;
	mov.f32 	%f4894, %f4652;
	mov.f32 	%f4895, %f4652;
	mov.f32 	%f4896, %f4652;
	mov.f32 	%f4897, %f4652;
	mov.f32 	%f4898, %f4652;
	mov.f32 	%f4899, %f4652;
	mov.f32 	%f4900, %f4652;
	mov.f32 	%f4901, %f4652;
	mov.f32 	%f4902, %f4652;
	mov.f32 	%f4903, %f4652;
	mov.f32 	%f4904, %f4652;
	mov.f32 	%f4905, %f4652;
	mov.f32 	%f4906, %f4652;
	mov.f32 	%f4907, %f4652;
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	@%p30 bra 	$L__BB0_11;
// %bb.5:                               // %.lr.ph
	.loc	1 0 22                          // 10-persistent-matmul-WS.py:0:22
	mov.b64 	%rd7, matmul_kernel_tma_persistent_param_2;
	mov.u64 	%rd1, %rd7;
	selp.u32 	%r589, 1, 0, %p15;
	add.s32 	%r26, %r3, -3;
	and.b32  	%r27, %r9, 134217724;
	shl.b32 	%r193, %r5, 1;
	and.b32  	%r194, %r193, 6;
	bfe.s32 	%r195, %r5, 2, 1;
	and.b32  	%r196, %r195, 144;
	or.b32  	%r197, %r196, %r194;
	shl.b32 	%r198, %r5, 2;
	and.b32  	%r199, %r198, 32;
	or.b32  	%r200, %r197, %r199;
	and.b32  	%r201, %r198, 64;
	or.b32  	%r202, %r200, %r201;
	bfe.u32 	%r203, %r5, 3, 2;
	shr.u32 	%r204, %r5, 2;
	and.b32  	%r205, %r204, 24;
	or.b32  	%r206, %r203, %r205;
	shl.b32 	%r207, %r206, 8;
	or.b32  	%r208, %r202, %r207;
	add.s32 	%r210, %r98, 197632;
	add.s32 	%r28, %r210, %r208;
	add.s32 	%r30, %r28, 1024;
	or.b32  	%r211, %r194, 16;
	xor.b32  	%r212, %r211, %r196;
	or.b32  	%r213, %r199, %r212;
	or.b32  	%r214, %r213, %r201;
	or.b32  	%r215, %r214, %r207;
	add.s32 	%r31, %r210, %r215;
	or.b32  	%r216, %r194, 24;
	xor.b32  	%r217, %r216, %r196;
	or.b32  	%r218, %r199, %r217;
	or.b32  	%r219, %r218, %r201;
	or.b32  	%r220, %r219, %r207;
	add.s32 	%r33, %r210, %r220;
	or.b32  	%r221, %r197, 32;
	xor.b32  	%r222, %r221, %r199;
	or.b32  	%r223, %r222, %r201;
	or.b32  	%r224, %r223, %r207;
	add.s32 	%r35, %r210, %r224;
	or.b32  	%r225, %r197, 40;
	xor.b32  	%r226, %r225, %r199;
	or.b32  	%r227, %r226, %r201;
	or.b32  	%r228, %r227, %r207;
	add.s32 	%r37, %r210, %r228;
	or.b32  	%r229, %r194, 48;
	or.b32  	%r230, %r196, %r199;
	xor.b32  	%r231, %r230, %r229;
	or.b32  	%r232, %r231, %r201;
	or.b32  	%r233, %r232, %r207;
	add.s32 	%r39, %r210, %r233;
	or.b32  	%r234, %r194, 56;
	xor.b32  	%r235, %r230, %r234;
	or.b32  	%r236, %r235, %r201;
	or.b32  	%r237, %r236, %r207;
	add.s32 	%r41, %r210, %r237;
	or.b32  	%r238, %r200, 64;
	xor.b32  	%r239, %r238, %r201;
	or.b32  	%r240, %r239, %r207;
	add.s32 	%r43, %r210, %r240;
	or.b32  	%r241, %r200, 72;
	xor.b32  	%r242, %r241, %r201;
	or.b32  	%r243, %r242, %r207;
	add.s32 	%r45, %r210, %r243;
	or.b32  	%r244, %r194, 80;
	xor.b32  	%r245, %r244, %r196;
	or.b32  	%r246, %r245, %r199;
	xor.b32  	%r247, %r246, %r201;
	or.b32  	%r248, %r247, %r207;
	add.s32 	%r47, %r210, %r248;
	or.b32  	%r249, %r194, 88;
	xor.b32  	%r250, %r249, %r196;
	or.b32  	%r251, %r250, %r199;
	xor.b32  	%r252, %r251, %r201;
	or.b32  	%r253, %r252, %r207;
	add.s32 	%r49, %r210, %r253;
	or.b32  	%r254, %r197, 96;
	and.b32  	%r255, %r198, 96;
	xor.b32  	%r256, %r255, %r254;
	or.b32  	%r257, %r256, %r207;
	add.s32 	%r51, %r210, %r257;
	or.b32  	%r258, %r197, 104;
	xor.b32  	%r259, %r255, %r258;
	or.b32  	%r260, %r259, %r207;
	add.s32 	%r53, %r210, %r260;
	or.b32  	%r261, %r194, 112;
	or.b32  	%r262, %r255, %r196;
	xor.b32  	%r263, %r262, %r261;
	or.b32  	%r264, %r263, %r207;
	add.s32 	%r55, %r210, %r264;
	or.b32  	%r265, %r194, 120;
	xor.b32  	%r266, %r262, %r265;
	or.b32  	%r267, %r266, %r207;
	add.s32 	%r57, %r210, %r267;
	add.s32 	%r59, %r28, 16384;
	add.s32 	%r60, %r28, 17408;
	add.s32 	%r61, %r28, 8192;
	add.s32 	%r62, %r28, 9216;
	add.s32 	%r63, %r28, 24576;
	add.s32 	%r64, %r28, 25600;
	setp.lt.u32 	%p33, %r5, 64;
	and.pred  	%p46, %p33, %p8;
	mov.f32 	%f4652, 0f00000000;
	mov.b32 	%r593, 2;
	mov.b32 	%r592, -1;
	mov.b32 	%r590, 0;
	cvta.param.u64 	%rd39, %rd1;
	mov.u32 	%r591, %r590;
	mov.f32 	%f4653, %f4652;
	mov.f32 	%f4654, %f4652;
	mov.f32 	%f4655, %f4652;
	mov.f32 	%f4656, %f4652;
	mov.f32 	%f4657, %f4652;
	mov.f32 	%f4658, %f4652;
	mov.f32 	%f4659, %f4652;
	mov.f32 	%f4660, %f4652;
	mov.f32 	%f4661, %f4652;
	mov.f32 	%f4662, %f4652;
	mov.f32 	%f4663, %f4652;
	mov.f32 	%f4664, %f4652;
	mov.f32 	%f4665, %f4652;
	mov.f32 	%f4666, %f4652;
	mov.f32 	%f4667, %f4652;
	mov.f32 	%f4668, %f4652;
	mov.f32 	%f4669, %f4652;
	mov.f32 	%f4670, %f4652;
	mov.f32 	%f4671, %f4652;
	mov.f32 	%f4672, %f4652;
	mov.f32 	%f4673, %f4652;
	mov.f32 	%f4674, %f4652;
	mov.f32 	%f4675, %f4652;
	mov.f32 	%f4676, %f4652;
	mov.f32 	%f4677, %f4652;
	mov.f32 	%f4678, %f4652;
	mov.f32 	%f4679, %f4652;
	mov.f32 	%f4680, %f4652;
	mov.f32 	%f4681, %f4652;
	mov.f32 	%f4682, %f4652;
	mov.f32 	%f4683, %f4652;
	mov.f32 	%f4684, %f4652;
	mov.f32 	%f4685, %f4652;
	mov.f32 	%f4686, %f4652;
	mov.f32 	%f4687, %f4652;
	mov.f32 	%f4688, %f4652;
	mov.f32 	%f4689, %f4652;
	mov.f32 	%f4690, %f4652;
	mov.f32 	%f4691, %f4652;
	mov.f32 	%f4692, %f4652;
	mov.f32 	%f4693, %f4652;
	mov.f32 	%f4694, %f4652;
	mov.f32 	%f4695, %f4652;
	mov.f32 	%f4696, %f4652;
	mov.f32 	%f4697, %f4652;
	mov.f32 	%f4698, %f4652;
	mov.f32 	%f4699, %f4652;
	mov.f32 	%f4700, %f4652;
	mov.f32 	%f4701, %f4652;
	mov.f32 	%f4702, %f4652;
	mov.f32 	%f4703, %f4652;
	mov.f32 	%f4704, %f4652;
	mov.f32 	%f4705, %f4652;
	mov.f32 	%f4706, %f4652;
	mov.f32 	%f4707, %f4652;
	mov.f32 	%f4708, %f4652;
	mov.f32 	%f4709, %f4652;
	mov.f32 	%f4710, %f4652;
	mov.f32 	%f4711, %f4652;
	mov.f32 	%f4712, %f4652;
	mov.f32 	%f4713, %f4652;
	mov.f32 	%f4714, %f4652;
	mov.f32 	%f4715, %f4652;
	mov.f32 	%f4716, %f4652;
	mov.f32 	%f4717, %f4652;
	mov.f32 	%f4718, %f4652;
	mov.f32 	%f4719, %f4652;
	mov.f32 	%f4720, %f4652;
	mov.f32 	%f4721, %f4652;
	mov.f32 	%f4722, %f4652;
	mov.f32 	%f4723, %f4652;
	mov.f32 	%f4724, %f4652;
	mov.f32 	%f4725, %f4652;
	mov.f32 	%f4726, %f4652;
	mov.f32 	%f4727, %f4652;
	mov.f32 	%f4728, %f4652;
	mov.f32 	%f4729, %f4652;
	mov.f32 	%f4730, %f4652;
	mov.f32 	%f4731, %f4652;
	mov.f32 	%f4732, %f4652;
	mov.f32 	%f4733, %f4652;
	mov.f32 	%f4734, %f4652;
	mov.f32 	%f4735, %f4652;
	mov.f32 	%f4736, %f4652;
	mov.f32 	%f4737, %f4652;
	mov.f32 	%f4738, %f4652;
	mov.f32 	%f4739, %f4652;
	mov.f32 	%f4740, %f4652;
	mov.f32 	%f4741, %f4652;
	mov.f32 	%f4742, %f4652;
	mov.f32 	%f4743, %f4652;
	mov.f32 	%f4744, %f4652;
	mov.f32 	%f4745, %f4652;
	mov.f32 	%f4746, %f4652;
	mov.f32 	%f4747, %f4652;
	mov.f32 	%f4748, %f4652;
	mov.f32 	%f4749, %f4652;
	mov.f32 	%f4750, %f4652;
	mov.f32 	%f4751, %f4652;
	mov.f32 	%f4752, %f4652;
	mov.f32 	%f4753, %f4652;
	mov.f32 	%f4754, %f4652;
	mov.f32 	%f4755, %f4652;
	mov.f32 	%f4756, %f4652;
	mov.f32 	%f4757, %f4652;
	mov.f32 	%f4758, %f4652;
	mov.f32 	%f4759, %f4652;
	mov.f32 	%f4760, %f4652;
	mov.f32 	%f4761, %f4652;
	mov.f32 	%f4762, %f4652;
	mov.f32 	%f4763, %f4652;
	mov.f32 	%f4764, %f4652;
	mov.f32 	%f4765, %f4652;
	mov.f32 	%f4766, %f4652;
	mov.f32 	%f4767, %f4652;
	mov.f32 	%f4768, %f4652;
	mov.f32 	%f4769, %f4652;
	mov.f32 	%f4770, %f4652;
	mov.f32 	%f4771, %f4652;
	mov.f32 	%f4772, %f4652;
	mov.f32 	%f4773, %f4652;
	mov.f32 	%f4774, %f4652;
	mov.f32 	%f4775, %f4652;
	mov.f32 	%f4776, %f4652;
	mov.f32 	%f4777, %f4652;
	mov.f32 	%f4778, %f4652;
	mov.f32 	%f4779, %f4652;
	mov.f32 	%f4780, %f4652;
	mov.f32 	%f4781, %f4652;
	mov.f32 	%f4782, %f4652;
	mov.f32 	%f4783, %f4652;
	mov.f32 	%f4784, %f4652;
	mov.f32 	%f4785, %f4652;
	mov.f32 	%f4786, %f4652;
	mov.f32 	%f4787, %f4652;
	mov.f32 	%f4788, %f4652;
	mov.f32 	%f4789, %f4652;
	mov.f32 	%f4790, %f4652;
	mov.f32 	%f4791, %f4652;
	mov.f32 	%f4792, %f4652;
	mov.f32 	%f4793, %f4652;
	mov.f32 	%f4794, %f4652;
	mov.f32 	%f4795, %f4652;
	mov.f32 	%f4796, %f4652;
	mov.f32 	%f4797, %f4652;
	mov.f32 	%f4798, %f4652;
	mov.f32 	%f4799, %f4652;
	mov.f32 	%f4800, %f4652;
	mov.f32 	%f4801, %f4652;
	mov.f32 	%f4802, %f4652;
	mov.f32 	%f4803, %f4652;
	mov.f32 	%f4804, %f4652;
	mov.f32 	%f4805, %f4652;
	mov.f32 	%f4806, %f4652;
	mov.f32 	%f4807, %f4652;
	mov.f32 	%f4808, %f4652;
	mov.f32 	%f4809, %f4652;
	mov.f32 	%f4810, %f4652;
	mov.f32 	%f4811, %f4652;
	mov.f32 	%f4812, %f4652;
	mov.f32 	%f4813, %f4652;
	mov.f32 	%f4814, %f4652;
	mov.f32 	%f4815, %f4652;
	mov.f32 	%f4816, %f4652;
	mov.f32 	%f4817, %f4652;
	mov.f32 	%f4818, %f4652;
	mov.f32 	%f4819, %f4652;
	mov.f32 	%f4820, %f4652;
	mov.f32 	%f4821, %f4652;
	mov.f32 	%f4822, %f4652;
	mov.f32 	%f4823, %f4652;
	mov.f32 	%f4824, %f4652;
	mov.f32 	%f4825, %f4652;
	mov.f32 	%f4826, %f4652;
	mov.f32 	%f4827, %f4652;
	mov.f32 	%f4828, %f4652;
	mov.f32 	%f4829, %f4652;
	mov.f32 	%f4830, %f4652;
	mov.f32 	%f4831, %f4652;
	mov.f32 	%f4832, %f4652;
	mov.f32 	%f4833, %f4652;
	mov.f32 	%f4834, %f4652;
	mov.f32 	%f4835, %f4652;
	mov.f32 	%f4836, %f4652;
	mov.f32 	%f4837, %f4652;
	mov.f32 	%f4838, %f4652;
	mov.f32 	%f4839, %f4652;
	mov.f32 	%f4840, %f4652;
	mov.f32 	%f4841, %f4652;
	mov.f32 	%f4842, %f4652;
	mov.f32 	%f4843, %f4652;
	mov.f32 	%f4844, %f4652;
	mov.f32 	%f4845, %f4652;
	mov.f32 	%f4846, %f4652;
	mov.f32 	%f4847, %f4652;
	mov.f32 	%f4848, %f4652;
	mov.f32 	%f4849, %f4652;
	mov.f32 	%f4850, %f4652;
	mov.f32 	%f4851, %f4652;
	mov.f32 	%f4852, %f4652;
	mov.f32 	%f4853, %f4652;
	mov.f32 	%f4854, %f4652;
	mov.f32 	%f4855, %f4652;
	mov.f32 	%f4856, %f4652;
	mov.f32 	%f4857, %f4652;
	mov.f32 	%f4858, %f4652;
	mov.f32 	%f4859, %f4652;
	mov.f32 	%f4860, %f4652;
	mov.f32 	%f4861, %f4652;
	mov.f32 	%f4862, %f4652;
	mov.f32 	%f4863, %f4652;
	mov.f32 	%f4864, %f4652;
	mov.f32 	%f4865, %f4652;
	mov.f32 	%f4866, %f4652;
	mov.f32 	%f4867, %f4652;
	mov.f32 	%f4868, %f4652;
	mov.f32 	%f4869, %f4652;
	mov.f32 	%f4870, %f4652;
	mov.f32 	%f4871, %f4652;
	mov.f32 	%f4872, %f4652;
	mov.f32 	%f4873, %f4652;
	mov.f32 	%f4874, %f4652;
	mov.f32 	%f4875, %f4652;
	mov.f32 	%f4876, %f4652;
	mov.f32 	%f4877, %f4652;
	mov.f32 	%f4878, %f4652;
	mov.f32 	%f4879, %f4652;
	mov.f32 	%f4880, %f4652;
	mov.f32 	%f4881, %f4652;
	mov.f32 	%f4882, %f4652;
	mov.f32 	%f4883, %f4652;
	mov.f32 	%f4884, %f4652;
	mov.f32 	%f4885, %f4652;
	mov.f32 	%f4886, %f4652;
	mov.f32 	%f4887, %f4652;
	mov.f32 	%f4888, %f4652;
	mov.f32 	%f4889, %f4652;
	mov.f32 	%f4890, %f4652;
	mov.f32 	%f4891, %f4652;
	mov.f32 	%f4892, %f4652;
	mov.f32 	%f4893, %f4652;
	mov.f32 	%f4894, %f4652;
	mov.f32 	%f4895, %f4652;
	mov.f32 	%f4896, %f4652;
	mov.f32 	%f4897, %f4652;
	mov.f32 	%f4898, %f4652;
	mov.f32 	%f4899, %f4652;
	mov.f32 	%f4900, %f4652;
	mov.f32 	%f4901, %f4652;
	mov.f32 	%f4902, %f4652;
	mov.f32 	%f4903, %f4652;
	mov.f32 	%f4904, %f4652;
	mov.f32 	%f4905, %f4652;
	mov.f32 	%f4906, %f4652;
	mov.f32 	%f4907, %f4652;
	mov.u32 	%r598, %r590;
	mov.u32 	%r600, %r595;
	mov.u32 	%r601, %r594;
	bra.uni 	$L__BB0_6;
$L__BB0_10:                             //   in Loop: Header=BB0_6 Depth=1
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	add.s32 	%r598, %r598, 1;
	setp.ne.s32 	%p47, %r3, %r598;
	mov.u32 	%r585, %r594;
	mov.u32 	%r586, %r65;
	mov.u32 	%r587, %r595;
	mov.u32 	%r588, %r67;
	mov.u32 	%r589, %r597;
	mov.u32 	%r590, %r69;
	mov.u32 	%r594, %r601;
	mov.u32 	%r595, %r600;
	mov.u32 	%r597, %r79;
	@%p47 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_11;
$L__BB0_6:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // 10-persistent-matmul-WS.py:0:22
	mov.u32 	%r69, %r589;
	mov.u32 	%r67, %r587;
	mov.u32 	%r65, %r585;
	.loc	1 88 28                         // 10-persistent-matmul-WS.py:88:28
	setp.eq.s32 	%p34, %r597, %r4;
	.loc	1 88 49                         // 10-persistent-matmul-WS.py:88:49
	add.s32 	%r268, %r597, 1;
	.loc	1 88 44                         // 10-persistent-matmul-WS.py:88:44
	selp.b32 	%r79, 0, %r268, %p34;
	.loc	1 89 17                         // 10-persistent-matmul-WS.py:89:17
	setp.ne.s32 	%p35, %r79, 0;
	.loc	1 89 11                         // 10-persistent-matmul-WS.py:89:11
	@%p35 bra 	$L__BB0_8;
// %bb.7:                               //   in Loop: Header=BB0_6 Depth=1
	.loc	1 90 23                         // 10-persistent-matmul-WS.py:90:23
	add.s32 	%r582, %r582, 132;
	.loc	1 91 34                         // 10-persistent-matmul-WS.py:91:34
	div.s32 	%r269, %r582, %r6;
	.loc	1 92 37                         // 10-persistent-matmul-WS.py:92:37
	shl.b32 	%r270, %r269, 3;
	.loc	1 93 43                         // 10-persistent-matmul-WS.py:93:43
	sub.s32 	%r271, %r2, %r270;
	.loc	1 93 56                         // 10-persistent-matmul-WS.py:93:56
	min.s32 	%r272, %r271, 8;
	.loc	1 94 45                         // 10-persistent-matmul-WS.py:94:45
	rem.s32 	%r273, %r582, %r272;
	.loc	1 94 35                         // 10-persistent-matmul-WS.py:94:35
	add.s32 	%r274, %r270, %r273;
	.loc	1 95 31                         // 10-persistent-matmul-WS.py:95:31
	mul.lo.s32 	%r275, %r269, %r6;
	sub.s32 	%r276, %r582, %r275;
	.loc	1 95 52                         // 10-persistent-matmul-WS.py:95:52
	div.s32 	%r277, %r276, %r272;
	.loc	1 97 30                         // 10-persistent-matmul-WS.py:97:30
	shl.b32 	%r600, %r274, 7;
	.loc	1 98 30                         // 10-persistent-matmul-WS.py:98:30
	shl.b32 	%r601, %r277, 8;
$L__BB0_8:                              //   in Loop: Header=BB0_6 Depth=1
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	setp.lt.s32 	%p39, %r598, %r26;
	add.s32 	%r289, %r592, 1;
	setp.gt.s32 	%p42, %r289, 3;
	selp.b32 	%r592, 0, %r289, %p42;
	selp.u32 	%r290, 1, 0, %p42;
	xor.b32  	%r591, %r591, %r290;
	shl.b32 	%r291, %r592, 3;
	add.s32 	%r278, %r93, %r291;
	bar.sync 	0;
	// begin inline asm
	{
	.reg .pred P1;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 P1, [%r278], %r591;
	@!P1 bra.uni waitLoop;
	}

	// end inline asm
	.loc	1 103 106                       // 10-persistent-matmul-WS.py:103:106
	shl.b32 	%r294, %r592, 15;
	add.s32 	%r88, %r102, %r294;
	.loc	1 102 106                       // 10-persistent-matmul-WS.py:102:106
	shl.b32 	%r296, %r592, 14;
	add.s32 	%r89, %r98, %r296;
	.loc	1 104 37                        // 10-persistent-matmul-WS.py:104:37
	shfl.sync.idx.b32	%r297, %r27, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r298, %r297, 7;
	and.b32  	%r299, %r298, 384;
	cvt.u64.u32 	%rd33, %r299;
	shr.u32 	%r300, %r89, 4;
	cvt.u64.u32 	%rd34, %r300;
	and.b64  	%rd35, %rd34, 16383;
	add.s64 	%rd36, %rd35, %rd33;
	or.b64  	%rd15, %rd36, 4611686293372403712;
	shr.u32 	%r301, %r88, 4;
	cvt.u64.u32 	%rd37, %r301;
	and.b64  	%rd38, %rd37, 16383;
	or.b64  	%rd16, %rd38, 4611686293439512576;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f4652,%f4653,%f4654,%f4655,%f4656,%f4657,%f4658,%f4659,%f4660,%f4661,%f4662,%f4663,%f4664,%f4665,%f4666,%f4667,%f4668,%f4669,%f4670,%f4671,%f4672,%f4673,%f4674,%f4675,%f4676,%f4677,%f4678,%f4679,%f4680,%f4681,%f4682,%f4683,%f4684,%f4685,%f4686,%f4687,%f4688,%f4689,%f4690,%f4691,%f4692,%f4693,%f4694,%f4695,%f4696,%f4697,%f4698,%f4699,%f4700,%f4701,%f4702,%f4703,%f4704,%f4705,%f4706,%f4707,%f4708,%f4709,%f4710,%f4711,%f4712,%f4713,%f4714,%f4715,%f4716,%f4717,%f4718,%f4719,%f4720,%f4721,%f4722,%f4723,%f4724,%f4725,%f4726,%f4727,%f4728,%f4729,%f4730,%f4731,%f4732,%f4733,%f4734,%f4735,%f4736,%f4737,%f4738,%f4739,%f4740,%f4741,%f4742,%f4743,%f4744,%f4745,%f4746,%f4747,%f4748,%f4749,%f4750,%f4751,%f4752,%f4753,%f4754,%f4755,%f4756,%f4757,%f4758,%f4759,%f4760,%f4761,%f4762,%f4763,%f4764,%f4765,%f4766,%f4767,%f4768,%f4769,%f4770,%f4771,%f4772,%f4773,%f4774,%f4775,%f4776,%f4777,%f4778,%f4779}, %rd15, %rd16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd17, %rd36, 4611686293372403714;
	add.s64 	%rd18, %rd38, 4611686293439512578;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f4652,%f4653,%f4654,%f4655,%f4656,%f4657,%f4658,%f4659,%f4660,%f4661,%f4662,%f4663,%f4664,%f4665,%f4666,%f4667,%f4668,%f4669,%f4670,%f4671,%f4672,%f4673,%f4674,%f4675,%f4676,%f4677,%f4678,%f4679,%f4680,%f4681,%f4682,%f4683,%f4684,%f4685,%f4686,%f4687,%f4688,%f4689,%f4690,%f4691,%f4692,%f4693,%f4694,%f4695,%f4696,%f4697,%f4698,%f4699,%f4700,%f4701,%f4702,%f4703,%f4704,%f4705,%f4706,%f4707,%f4708,%f4709,%f4710,%f4711,%f4712,%f4713,%f4714,%f4715,%f4716,%f4717,%f4718,%f4719,%f4720,%f4721,%f4722,%f4723,%f4724,%f4725,%f4726,%f4727,%f4728,%f4729,%f4730,%f4731,%f4732,%f4733,%f4734,%f4735,%f4736,%f4737,%f4738,%f4739,%f4740,%f4741,%f4742,%f4743,%f4744,%f4745,%f4746,%f4747,%f4748,%f4749,%f4750,%f4751,%f4752,%f4753,%f4754,%f4755,%f4756,%f4757,%f4758,%f4759,%f4760,%f4761,%f4762,%f4763,%f4764,%f4765,%f4766,%f4767,%f4768,%f4769,%f4770,%f4771,%f4772,%f4773,%f4774,%f4775,%f4776,%f4777,%f4778,%f4779}, %rd17, %rd18, 1, 1, 1;
	// end inline asm
	add.s64 	%rd19, %rd36, 4611686293372403716;
	add.s64 	%rd20, %rd38, 4611686293439512580;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f4652,%f4653,%f4654,%f4655,%f4656,%f4657,%f4658,%f4659,%f4660,%f4661,%f4662,%f4663,%f4664,%f4665,%f4666,%f4667,%f4668,%f4669,%f4670,%f4671,%f4672,%f4673,%f4674,%f4675,%f4676,%f4677,%f4678,%f4679,%f4680,%f4681,%f4682,%f4683,%f4684,%f4685,%f4686,%f4687,%f4688,%f4689,%f4690,%f4691,%f4692,%f4693,%f4694,%f4695,%f4696,%f4697,%f4698,%f4699,%f4700,%f4701,%f4702,%f4703,%f4704,%f4705,%f4706,%f4707,%f4708,%f4709,%f4710,%f4711,%f4712,%f4713,%f4714,%f4715,%f4716,%f4717,%f4718,%f4719,%f4720,%f4721,%f4722,%f4723,%f4724,%f4725,%f4726,%f4727,%f4728,%f4729,%f4730,%f4731,%f4732,%f4733,%f4734,%f4735,%f4736,%f4737,%f4738,%f4739,%f4740,%f4741,%f4742,%f4743,%f4744,%f4745,%f4746,%f4747,%f4748,%f4749,%f4750,%f4751,%f4752,%f4753,%f4754,%f4755,%f4756,%f4757,%f4758,%f4759,%f4760,%f4761,%f4762,%f4763,%f4764,%f4765,%f4766,%f4767,%f4768,%f4769,%f4770,%f4771,%f4772,%f4773,%f4774,%f4775,%f4776,%f4777,%f4778,%f4779}, %rd19, %rd20, 1, 1, 1;
	// end inline asm
	add.s64 	%rd21, %rd36, 4611686293372403718;
	add.s64 	%rd22, %rd38, 4611686293439512582;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f4652,%f4653,%f4654,%f4655,%f4656,%f4657,%f4658,%f4659,%f4660,%f4661,%f4662,%f4663,%f4664,%f4665,%f4666,%f4667,%f4668,%f4669,%f4670,%f4671,%f4672,%f4673,%f4674,%f4675,%f4676,%f4677,%f4678,%f4679,%f4680,%f4681,%f4682,%f4683,%f4684,%f4685,%f4686,%f4687,%f4688,%f4689,%f4690,%f4691,%f4692,%f4693,%f4694,%f4695,%f4696,%f4697,%f4698,%f4699,%f4700,%f4701,%f4702,%f4703,%f4704,%f4705,%f4706,%f4707,%f4708,%f4709,%f4710,%f4711,%f4712,%f4713,%f4714,%f4715,%f4716,%f4717,%f4718,%f4719,%f4720,%f4721,%f4722,%f4723,%f4724,%f4725,%f4726,%f4727,%f4728,%f4729,%f4730,%f4731,%f4732,%f4733,%f4734,%f4735,%f4736,%f4737,%f4738,%f4739,%f4740,%f4741,%f4742,%f4743,%f4744,%f4745,%f4746,%f4747,%f4748,%f4749,%f4750,%f4751,%f4752,%f4753,%f4754,%f4755,%f4756,%f4757,%f4758,%f4759,%f4760,%f4761,%f4762,%f4763,%f4764,%f4765,%f4766,%f4767,%f4768,%f4769,%f4770,%f4771,%f4772,%f4773,%f4774,%f4775,%f4776,%f4777,%f4778,%f4779}, %rd21, %rd22, 1, 1, 1;
	// end inline asm
	add.s64 	%rd23, %rd36, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f4780,%f4781,%f4782,%f4783,%f4784,%f4785,%f4786,%f4787,%f4788,%f4789,%f4790,%f4791,%f4792,%f4793,%f4794,%f4795,%f4796,%f4797,%f4798,%f4799,%f4800,%f4801,%f4802,%f4803,%f4804,%f4805,%f4806,%f4807,%f4808,%f4809,%f4810,%f4811,%f4812,%f4813,%f4814,%f4815,%f4816,%f4817,%f4818,%f4819,%f4820,%f4821,%f4822,%f4823,%f4824,%f4825,%f4826,%f4827,%f4828,%f4829,%f4830,%f4831,%f4832,%f4833,%f4834,%f4835,%f4836,%f4837,%f4838,%f4839,%f4840,%f4841,%f4842,%f4843,%f4844,%f4845,%f4846,%f4847,%f4848,%f4849,%f4850,%f4851,%f4852,%f4853,%f4854,%f4855,%f4856,%f4857,%f4858,%f4859,%f4860,%f4861,%f4862,%f4863,%f4864,%f4865,%f4866,%f4867,%f4868,%f4869,%f4870,%f4871,%f4872,%f4873,%f4874,%f4875,%f4876,%f4877,%f4878,%f4879,%f4880,%f4881,%f4882,%f4883,%f4884,%f4885,%f4886,%f4887,%f4888,%f4889,%f4890,%f4891,%f4892,%f4893,%f4894,%f4895,%f4896,%f4897,%f4898,%f4899,%f4900,%f4901,%f4902,%f4903,%f4904,%f4905,%f4906,%f4907}, %rd23, %rd16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd25, %rd36, 4611686293372404226;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f4780,%f4781,%f4782,%f4783,%f4784,%f4785,%f4786,%f4787,%f4788,%f4789,%f4790,%f4791,%f4792,%f4793,%f4794,%f4795,%f4796,%f4797,%f4798,%f4799,%f4800,%f4801,%f4802,%f4803,%f4804,%f4805,%f4806,%f4807,%f4808,%f4809,%f4810,%f4811,%f4812,%f4813,%f4814,%f4815,%f4816,%f4817,%f4818,%f4819,%f4820,%f4821,%f4822,%f4823,%f4824,%f4825,%f4826,%f4827,%f4828,%f4829,%f4830,%f4831,%f4832,%f4833,%f4834,%f4835,%f4836,%f4837,%f4838,%f4839,%f4840,%f4841,%f4842,%f4843,%f4844,%f4845,%f4846,%f4847,%f4848,%f4849,%f4850,%f4851,%f4852,%f4853,%f4854,%f4855,%f4856,%f4857,%f4858,%f4859,%f4860,%f4861,%f4862,%f4863,%f4864,%f4865,%f4866,%f4867,%f4868,%f4869,%f4870,%f4871,%f4872,%f4873,%f4874,%f4875,%f4876,%f4877,%f4878,%f4879,%f4880,%f4881,%f4882,%f4883,%f4884,%f4885,%f4886,%f4887,%f4888,%f4889,%f4890,%f4891,%f4892,%f4893,%f4894,%f4895,%f4896,%f4897,%f4898,%f4899,%f4900,%f4901,%f4902,%f4903,%f4904,%f4905,%f4906,%f4907}, %rd25, %rd18, 1, 1, 1;
	// end inline asm
	add.s64 	%rd27, %rd36, 4611686293372404228;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f4780,%f4781,%f4782,%f4783,%f4784,%f4785,%f4786,%f4787,%f4788,%f4789,%f4790,%f4791,%f4792,%f4793,%f4794,%f4795,%f4796,%f4797,%f4798,%f4799,%f4800,%f4801,%f4802,%f4803,%f4804,%f4805,%f4806,%f4807,%f4808,%f4809,%f4810,%f4811,%f4812,%f4813,%f4814,%f4815,%f4816,%f4817,%f4818,%f4819,%f4820,%f4821,%f4822,%f4823,%f4824,%f4825,%f4826,%f4827,%f4828,%f4829,%f4830,%f4831,%f4832,%f4833,%f4834,%f4835,%f4836,%f4837,%f4838,%f4839,%f4840,%f4841,%f4842,%f4843,%f4844,%f4845,%f4846,%f4847,%f4848,%f4849,%f4850,%f4851,%f4852,%f4853,%f4854,%f4855,%f4856,%f4857,%f4858,%f4859,%f4860,%f4861,%f4862,%f4863,%f4864,%f4865,%f4866,%f4867,%f4868,%f4869,%f4870,%f4871,%f4872,%f4873,%f4874,%f4875,%f4876,%f4877,%f4878,%f4879,%f4880,%f4881,%f4882,%f4883,%f4884,%f4885,%f4886,%f4887,%f4888,%f4889,%f4890,%f4891,%f4892,%f4893,%f4894,%f4895,%f4896,%f4897,%f4898,%f4899,%f4900,%f4901,%f4902,%f4903,%f4904,%f4905,%f4906,%f4907}, %rd27, %rd20, 1, 1, 1;
	// end inline asm
	add.s64 	%rd29, %rd36, 4611686293372404230;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k32.f32.e4m3.e4m3 {%f4780,%f4781,%f4782,%f4783,%f4784,%f4785,%f4786,%f4787,%f4788,%f4789,%f4790,%f4791,%f4792,%f4793,%f4794,%f4795,%f4796,%f4797,%f4798,%f4799,%f4800,%f4801,%f4802,%f4803,%f4804,%f4805,%f4806,%f4807,%f4808,%f4809,%f4810,%f4811,%f4812,%f4813,%f4814,%f4815,%f4816,%f4817,%f4818,%f4819,%f4820,%f4821,%f4822,%f4823,%f4824,%f4825,%f4826,%f4827,%f4828,%f4829,%f4830,%f4831,%f4832,%f4833,%f4834,%f4835,%f4836,%f4837,%f4838,%f4839,%f4840,%f4841,%f4842,%f4843,%f4844,%f4845,%f4846,%f4847,%f4848,%f4849,%f4850,%f4851,%f4852,%f4853,%f4854,%f4855,%f4856,%f4857,%f4858,%f4859,%f4860,%f4861,%f4862,%f4863,%f4864,%f4865,%f4866,%f4867,%f4868,%f4869,%f4870,%f4871,%f4872,%f4873,%f4874,%f4875,%f4876,%f4877,%f4878,%f4879,%f4880,%f4881,%f4882,%f4883,%f4884,%f4885,%f4886,%f4887,%f4888,%f4889,%f4890,%f4891,%f4892,%f4893,%f4894,%f4895,%f4896,%f4897,%f4898,%f4899,%f4900,%f4901,%f4902,%f4903,%f4904,%f4905,%f4906,%f4907}, %rd29, %rd22, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%f3863, %r89;
	mov.b32 	%f3868, %r88;
	mov.f32 	%f3869, 0f00000001;
	mov.f32 	%f3870, 0f00000080;
	mov.f32 	%f4132, 0f00000000;
	mov.f32 	%f3336, %f3868;
	mov.f32 	%f3337, %f3869;
	mov.f32 	%f3338, %f3870;
	mov.f32 	%f3340, %f4132;
	mov.f32 	%f3331, %f3863;
	mov.f32 	%f3332, %f3870;
	mov.f32 	%f3333, %f3869;
	mov.f32 	%f3334, %f4132;
	mov.f32 	%f3335, %f4132;
	mov.f32 	%f3339, %f4132;
	// begin inline asm
	// wait for regs: %f4652,%f4653,%f4654,%f4655,%f4656,%f4657,%f4658,%f4659,%f4660,%f4661,%f4662,%f4663,%f4664,%f4665,%f4666,%f4667,%f4668,%f4669,%f4670,%f4671,%f4672,%f4673,%f4674,%f4675,%f4676,%f4677,%f4678,%f4679,%f4680,%f4681,%f4682,%f4683,%f4684,%f4685,%f4686,%f4687,%f4688,%f4689,%f4690,%f4691,%f4692,%f4693,%f4694,%f4695,%f4696,%f4697,%f4698,%f4699,%f4700,%f4701,%f4702,%f4703,%f4704,%f4705,%f4706,%f4707,%f4708,%f4709,%f4710,%f4711,%f4712,%f4713,%f4714,%f4715,%f4716,%f4717,%f4718,%f4719,%f4720,%f4721,%f4722,%f4723,%f4724,%f4725,%f4726,%f4727,%f4728,%f4729,%f4730,%f4731,%f4732,%f4733,%f4734,%f4735,%f4736,%f4737,%f4738,%f4739,%f4740,%f4741,%f4742,%f4743,%f4744,%f4745,%f4746,%f4747,%f4748,%f4749,%f4750,%f4751,%f4752,%f4753,%f4754,%f4755,%f4756,%f4757,%f4758,%f4759,%f4760,%f4761,%f4762,%f4763,%f4764,%f4765,%f4766,%f4767,%f4768,%f4769,%f4770,%f4771,%f4772,%f4773,%f4774,%f4775,%f4776,%f4777,%f4778,%f4779,%f4780,%f4781,%f4782,%f4783,%f4784,%f4785,%f4786,%f4787,%f4788,%f4789,%f4790,%f4791,%f4792,%f4793,%f4794,%f4795,%f4796,%f4797,%f4798,%f4799,%f4800,%f4801,%f4802,%f4803,%f4804,%f4805,%f4806,%f4807,%f4808,%f4809,%f4810,%f4811,%f4812,%f4813,%f4814,%f4815,%f4816,%f4817,%f4818,%f4819,%f4820,%f4821,%f4822,%f4823,%f4824,%f4825,%f4826,%f4827,%f4828,%f4829,%f4830,%f4831,%f4832,%f4833,%f4834,%f4835,%f4836,%f4837,%f4838,%f4839,%f4840,%f4841,%f4842,%f4843,%f4844,%f4845,%f4846,%f4847,%f4848,%f4849,%f4850,%f4851,%f4852,%f4853,%f4854,%f4855,%f4856,%f4857,%f4858,%f4859,%f4860,%f4861,%f4862,%f4863,%f4864,%f4865,%f4866,%f4867,%f4868,%f4869,%f4870,%f4871,%f4872,%f4873,%f4874,%f4875,%f4876,%f4877,%f4878,%f4879,%f4880,%f4881,%f4882,%f4883,%f4884,%f4885,%f4886,%f4887,%f4888,%f4889,%f4890,%f4891,%f4892,%f4893,%f4894,%f4895,%f4896,%f4897,%f4898,%f4899,%f4900,%f4901,%f4902,%f4903,%f4904,%f4905,%f4906,%f4907,%f3331,%f3332,%f3333,%f3334,%f3335,%f3336,%f3337,%f3338,%f3339,%f3340
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	add.s32 	%r302, %r593, 1;
	setp.lt.s32 	%p43, %r302, 4;
	selp.b32 	%r593, %r302, 0, %p43;
	.loc	1 100 22                        // 10-persistent-matmul-WS.py:100:22
	shl.b32 	%r282, %r79, 7;
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	shl.b32 	%r303, %r593, 3;
	add.s32 	%r280, %r93, %r303;
	bar.sync 	0;
	and.pred  	%p36, %p48, %p39;
	// begin inline asm
	@%p36 mbarrier.arrive.expect_tx.shared.b64 _, [%r280], 49152;
	// end inline asm
	.loc	1 102 106                       // 10-persistent-matmul-WS.py:102:106
	shl.b32 	%r304, %r593, 14;
	add.s32 	%r281, %r98, %r304;
	bar.sync 	0;
	shfl.sync.idx.b32	%r305, %r9, 0, 31, -1;
	and.pred  	%p44, %p8, %p39;
	and.pred  	%p37, %p14, %p44;
	// begin inline asm
	@%p37 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r281], [%rd31, {%r282, %r600}], [%r280];
	// end inline asm
	.loc	1 103 106                       // 10-persistent-matmul-WS.py:103:106
	shl.b32 	%r306, %r593, 15;
	add.s32 	%r285, %r102, %r306;
	bar.sync 	0;
	shfl.sync.idx.b32	%r307, %r9, 0, 31, -1;
	// begin inline asm
	@%p37 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r285], [%rd32, {%r282, %r601}], [%r280];
	// end inline asm
	.loc	1 106 17                        // 10-persistent-matmul-WS.py:106:17
	setp.ne.s32 	%p45, %r590, %r4;
	.loc	1 106 11                        // 10-persistent-matmul-WS.py:106:11
	@%p45 bra 	$L__BB0_10;
// %bb.9:                               //   in Loop: Header=BB0_6 Depth=1
	.loc	1 104 37                        // 10-persistent-matmul-WS.py:104:37
	mov.f32 	%f3864, %f3870;
	mov.f32 	%f3865, %f3869;
	mov.f32 	%f3866, %f4132;
	mov.f32 	%f3867, %f4132;
	mov.f32 	%f3871, %f4132;
	mov.f32 	%f3872, %f4132;
	// begin inline asm
	// wait for regs: %f4652,%f4653,%f4654,%f4655,%f4656,%f4657,%f4658,%f4659,%f4660,%f4661,%f4662,%f4663,%f4664,%f4665,%f4666,%f4667,%f4668,%f4669,%f4670,%f4671,%f4672,%f4673,%f4674,%f4675,%f4676,%f4677,%f4678,%f4679,%f4680,%f4681,%f4682,%f4683,%f4684,%f4685,%f4686,%f4687,%f4688,%f4689,%f4690,%f4691,%f4692,%f4693,%f4694,%f4695,%f4696,%f4697,%f4698,%f4699,%f4700,%f4701,%f4702,%f4703,%f4704,%f4705,%f4706,%f4707,%f4708,%f4709,%f4710,%f4711,%f4712,%f4713,%f4714,%f4715,%f4716,%f4717,%f4718,%f4719,%f4720,%f4721,%f4722,%f4723,%f4724,%f4725,%f4726,%f4727,%f4728,%f4729,%f4730,%f4731,%f4732,%f4733,%f4734,%f4735,%f4736,%f4737,%f4738,%f4739,%f4740,%f4741,%f4742,%f4743,%f4744,%f4745,%f4746,%f4747,%f4748,%f4749,%f4750,%f4751,%f4752,%f4753,%f4754,%f4755,%f4756,%f4757,%f4758,%f4759,%f4760,%f4761,%f4762,%f4763,%f4764,%f4765,%f4766,%f4767,%f4768,%f4769,%f4770,%f4771,%f4772,%f4773,%f4774,%f4775,%f4776,%f4777,%f4778,%f4779,%f4780,%f4781,%f4782,%f4783,%f4784,%f4785,%f4786,%f4787,%f4788,%f4789,%f4790,%f4791,%f4792,%f4793,%f4794,%f4795,%f4796,%f4797,%f4798,%f4799,%f4800,%f4801,%f4802,%f4803,%f4804,%f4805,%f4806,%f4807,%f4808,%f4809,%f4810,%f4811,%f4812,%f4813,%f4814,%f4815,%f4816,%f4817,%f4818,%f4819,%f4820,%f4821,%f4822,%f4823,%f4824,%f4825,%f4826,%f4827,%f4828,%f4829,%f4830,%f4831,%f4832,%f4833,%f4834,%f4835,%f4836,%f4837,%f4838,%f4839,%f4840,%f4841,%f4842,%f4843,%f4844,%f4845,%f4846,%f4847,%f4848,%f4849,%f4850,%f4851,%f4852,%f4853,%f4854,%f4855,%f4856,%f4857,%f4858,%f4859,%f4860,%f4861,%f4862,%f4863,%f4864,%f4865,%f4866,%f4867,%f4868,%f4869,%f4870,%f4871,%f4872,%f4873,%f4874,%f4875,%f4876,%f4877,%f4878,%f4879,%f4880,%f4881,%f4882,%f4883,%f4884,%f4885,%f4886,%f4887,%f4888,%f4889,%f4890,%f4891,%f4892,%f4893,%f4894,%f4895,%f4896,%f4897,%f4898,%f4899,%f4900,%f4901,%f4902,%f4903,%f4904,%f4905,%f4906,%f4907,%f3863,%f3864,%f3865,%f3866,%f3867,%f3868,%f3869,%f3870,%f3871,%f3872
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 107 31                        // 10-persistent-matmul-WS.py:107:31
	mov.b32 	%r308, %f4652;
	mov.b32 	%r309, %f4653;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs1, %r309, %r308;

	// end inline asm
	mov.b32 	%r310, %f4654;
	mov.b32 	%r311, %f4655;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs2, %r311, %r310;

	// end inline asm
	mov.b32 	%r312, %f4656;
	mov.b32 	%r313, %f4657;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs3, %r313, %r312;

	// end inline asm
	mov.b32 	%r314, %f4658;
	mov.b32 	%r315, %f4659;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs4, %r315, %r314;

	// end inline asm
	mov.b32 	%r316, %f4660;
	mov.b32 	%r317, %f4661;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs5, %r317, %r316;

	// end inline asm
	mov.b32 	%r318, %f4662;
	mov.b32 	%r319, %f4663;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs6, %r319, %r318;

	// end inline asm
	mov.b32 	%r320, %f4664;
	mov.b32 	%r321, %f4665;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs7, %r321, %r320;

	// end inline asm
	mov.b32 	%r322, %f4666;
	mov.b32 	%r323, %f4667;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs8, %r323, %r322;

	// end inline asm
	mov.b32 	%r324, %f4668;
	mov.b32 	%r325, %f4669;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs9, %r325, %r324;

	// end inline asm
	mov.b32 	%r326, %f4670;
	mov.b32 	%r327, %f4671;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs10, %r327, %r326;

	// end inline asm
	mov.b32 	%r328, %f4672;
	mov.b32 	%r329, %f4673;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs11, %r329, %r328;

	// end inline asm
	mov.b32 	%r330, %f4674;
	mov.b32 	%r331, %f4675;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs12, %r331, %r330;

	// end inline asm
	mov.b32 	%r332, %f4676;
	mov.b32 	%r333, %f4677;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs13, %r333, %r332;

	// end inline asm
	mov.b32 	%r334, %f4678;
	mov.b32 	%r335, %f4679;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs14, %r335, %r334;

	// end inline asm
	mov.b32 	%r336, %f4680;
	mov.b32 	%r337, %f4681;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs15, %r337, %r336;

	// end inline asm
	mov.b32 	%r338, %f4682;
	mov.b32 	%r339, %f4683;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs16, %r339, %r338;

	// end inline asm
	mov.b32 	%r340, %f4684;
	mov.b32 	%r341, %f4685;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs17, %r341, %r340;

	// end inline asm
	mov.b32 	%r342, %f4686;
	mov.b32 	%r343, %f4687;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs18, %r343, %r342;

	// end inline asm
	mov.b32 	%r344, %f4688;
	mov.b32 	%r345, %f4689;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs19, %r345, %r344;

	// end inline asm
	mov.b32 	%r346, %f4690;
	mov.b32 	%r347, %f4691;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs20, %r347, %r346;

	// end inline asm
	mov.b32 	%r348, %f4692;
	mov.b32 	%r349, %f4693;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs21, %r349, %r348;

	// end inline asm
	mov.b32 	%r350, %f4694;
	mov.b32 	%r351, %f4695;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs22, %r351, %r350;

	// end inline asm
	mov.b32 	%r352, %f4696;
	mov.b32 	%r353, %f4697;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs23, %r353, %r352;

	// end inline asm
	mov.b32 	%r354, %f4698;
	mov.b32 	%r355, %f4699;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs24, %r355, %r354;

	// end inline asm
	mov.b32 	%r356, %f4700;
	mov.b32 	%r357, %f4701;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs25, %r357, %r356;

	// end inline asm
	mov.b32 	%r358, %f4702;
	mov.b32 	%r359, %f4703;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs26, %r359, %r358;

	// end inline asm
	mov.b32 	%r360, %f4704;
	mov.b32 	%r361, %f4705;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs27, %r361, %r360;

	// end inline asm
	mov.b32 	%r362, %f4706;
	mov.b32 	%r363, %f4707;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs28, %r363, %r362;

	// end inline asm
	mov.b32 	%r364, %f4708;
	mov.b32 	%r365, %f4709;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs29, %r365, %r364;

	// end inline asm
	mov.b32 	%r366, %f4710;
	mov.b32 	%r367, %f4711;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs30, %r367, %r366;

	// end inline asm
	mov.b32 	%r368, %f4712;
	mov.b32 	%r369, %f4713;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs31, %r369, %r368;

	// end inline asm
	mov.b32 	%r370, %f4714;
	mov.b32 	%r371, %f4715;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs32, %r371, %r370;

	// end inline asm
	mov.b32 	%r372, %f4716;
	mov.b32 	%r373, %f4717;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs33, %r373, %r372;

	// end inline asm
	mov.b32 	%r374, %f4718;
	mov.b32 	%r375, %f4719;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs34, %r375, %r374;

	// end inline asm
	mov.b32 	%r376, %f4720;
	mov.b32 	%r377, %f4721;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs35, %r377, %r376;

	// end inline asm
	mov.b32 	%r378, %f4722;
	mov.b32 	%r379, %f4723;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs36, %r379, %r378;

	// end inline asm
	mov.b32 	%r380, %f4724;
	mov.b32 	%r381, %f4725;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs37, %r381, %r380;

	// end inline asm
	mov.b32 	%r382, %f4726;
	mov.b32 	%r383, %f4727;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs38, %r383, %r382;

	// end inline asm
	mov.b32 	%r384, %f4728;
	mov.b32 	%r385, %f4729;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs39, %r385, %r384;

	// end inline asm
	mov.b32 	%r386, %f4730;
	mov.b32 	%r387, %f4731;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs40, %r387, %r386;

	// end inline asm
	mov.b32 	%r388, %f4732;
	mov.b32 	%r389, %f4733;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs41, %r389, %r388;

	// end inline asm
	mov.b32 	%r390, %f4734;
	mov.b32 	%r391, %f4735;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs42, %r391, %r390;

	// end inline asm
	mov.b32 	%r392, %f4736;
	mov.b32 	%r393, %f4737;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs43, %r393, %r392;

	// end inline asm
	mov.b32 	%r394, %f4738;
	mov.b32 	%r395, %f4739;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs44, %r395, %r394;

	// end inline asm
	mov.b32 	%r396, %f4740;
	mov.b32 	%r397, %f4741;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs45, %r397, %r396;

	// end inline asm
	mov.b32 	%r398, %f4742;
	mov.b32 	%r399, %f4743;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs46, %r399, %r398;

	// end inline asm
	mov.b32 	%r400, %f4744;
	mov.b32 	%r401, %f4745;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs47, %r401, %r400;

	// end inline asm
	mov.b32 	%r402, %f4746;
	mov.b32 	%r403, %f4747;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs48, %r403, %r402;

	// end inline asm
	mov.b32 	%r404, %f4748;
	mov.b32 	%r405, %f4749;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs49, %r405, %r404;

	// end inline asm
	mov.b32 	%r406, %f4750;
	mov.b32 	%r407, %f4751;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs50, %r407, %r406;

	// end inline asm
	mov.b32 	%r408, %f4752;
	mov.b32 	%r409, %f4753;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs51, %r409, %r408;

	// end inline asm
	mov.b32 	%r410, %f4754;
	mov.b32 	%r411, %f4755;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs52, %r411, %r410;

	// end inline asm
	mov.b32 	%r412, %f4756;
	mov.b32 	%r413, %f4757;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs53, %r413, %r412;

	// end inline asm
	mov.b32 	%r414, %f4758;
	mov.b32 	%r415, %f4759;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs54, %r415, %r414;

	// end inline asm
	mov.b32 	%r416, %f4760;
	mov.b32 	%r417, %f4761;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs55, %r417, %r416;

	// end inline asm
	mov.b32 	%r418, %f4762;
	mov.b32 	%r419, %f4763;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs56, %r419, %r418;

	// end inline asm
	mov.b32 	%r420, %f4764;
	mov.b32 	%r421, %f4765;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs57, %r421, %r420;

	// end inline asm
	mov.b32 	%r422, %f4766;
	mov.b32 	%r423, %f4767;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs58, %r423, %r422;

	// end inline asm
	mov.b32 	%r424, %f4768;
	mov.b32 	%r425, %f4769;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs59, %r425, %r424;

	// end inline asm
	mov.b32 	%r426, %f4770;
	mov.b32 	%r427, %f4771;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs60, %r427, %r426;

	// end inline asm
	mov.b32 	%r428, %f4772;
	mov.b32 	%r429, %f4773;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs61, %r429, %r428;

	// end inline asm
	mov.b32 	%r430, %f4774;
	mov.b32 	%r431, %f4775;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs62, %r431, %r430;

	// end inline asm
	mov.b32 	%r432, %f4776;
	mov.b32 	%r433, %f4777;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs63, %r433, %r432;

	// end inline asm
	mov.b32 	%r434, %f4778;
	mov.b32 	%r435, %f4779;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs64, %r435, %r434;

	// end inline asm
	mov.b32 	%r436, %f4780;
	mov.b32 	%r437, %f4781;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs65, %r437, %r436;

	// end inline asm
	mov.b32 	%r438, %f4782;
	mov.b32 	%r439, %f4783;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs66, %r439, %r438;

	// end inline asm
	mov.b32 	%r440, %f4784;
	mov.b32 	%r441, %f4785;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs67, %r441, %r440;

	// end inline asm
	mov.b32 	%r442, %f4786;
	mov.b32 	%r443, %f4787;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs68, %r443, %r442;

	// end inline asm
	mov.b32 	%r444, %f4788;
	mov.b32 	%r445, %f4789;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs69, %r445, %r444;

	// end inline asm
	mov.b32 	%r446, %f4790;
	mov.b32 	%r447, %f4791;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs70, %r447, %r446;

	// end inline asm
	mov.b32 	%r448, %f4792;
	mov.b32 	%r449, %f4793;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs71, %r449, %r448;

	// end inline asm
	mov.b32 	%r450, %f4794;
	mov.b32 	%r451, %f4795;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs72, %r451, %r450;

	// end inline asm
	mov.b32 	%r452, %f4796;
	mov.b32 	%r453, %f4797;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs73, %r453, %r452;

	// end inline asm
	mov.b32 	%r454, %f4798;
	mov.b32 	%r455, %f4799;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs74, %r455, %r454;

	// end inline asm
	mov.b32 	%r456, %f4800;
	mov.b32 	%r457, %f4801;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs75, %r457, %r456;

	// end inline asm
	mov.b32 	%r458, %f4802;
	mov.b32 	%r459, %f4803;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs76, %r459, %r458;

	// end inline asm
	mov.b32 	%r460, %f4804;
	mov.b32 	%r461, %f4805;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs77, %r461, %r460;

	// end inline asm
	mov.b32 	%r462, %f4806;
	mov.b32 	%r463, %f4807;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs78, %r463, %r462;

	// end inline asm
	mov.b32 	%r464, %f4808;
	mov.b32 	%r465, %f4809;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs79, %r465, %r464;

	// end inline asm
	mov.b32 	%r466, %f4810;
	mov.b32 	%r467, %f4811;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs80, %r467, %r466;

	// end inline asm
	mov.b32 	%r468, %f4812;
	mov.b32 	%r469, %f4813;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs81, %r469, %r468;

	// end inline asm
	mov.b32 	%r470, %f4814;
	mov.b32 	%r471, %f4815;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs82, %r471, %r470;

	// end inline asm
	mov.b32 	%r472, %f4816;
	mov.b32 	%r473, %f4817;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs83, %r473, %r472;

	// end inline asm
	mov.b32 	%r474, %f4818;
	mov.b32 	%r475, %f4819;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs84, %r475, %r474;

	// end inline asm
	mov.b32 	%r476, %f4820;
	mov.b32 	%r477, %f4821;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs85, %r477, %r476;

	// end inline asm
	mov.b32 	%r478, %f4822;
	mov.b32 	%r479, %f4823;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs86, %r479, %r478;

	// end inline asm
	mov.b32 	%r480, %f4824;
	mov.b32 	%r481, %f4825;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs87, %r481, %r480;

	// end inline asm
	mov.b32 	%r482, %f4826;
	mov.b32 	%r483, %f4827;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs88, %r483, %r482;

	// end inline asm
	mov.b32 	%r484, %f4828;
	mov.b32 	%r485, %f4829;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs89, %r485, %r484;

	// end inline asm
	mov.b32 	%r486, %f4830;
	mov.b32 	%r487, %f4831;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs90, %r487, %r486;

	// end inline asm
	mov.b32 	%r488, %f4832;
	mov.b32 	%r489, %f4833;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs91, %r489, %r488;

	// end inline asm
	mov.b32 	%r490, %f4834;
	mov.b32 	%r491, %f4835;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs92, %r491, %r490;

	// end inline asm
	mov.b32 	%r492, %f4836;
	mov.b32 	%r493, %f4837;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs93, %r493, %r492;

	// end inline asm
	mov.b32 	%r494, %f4838;
	mov.b32 	%r495, %f4839;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs94, %r495, %r494;

	// end inline asm
	mov.b32 	%r496, %f4840;
	mov.b32 	%r497, %f4841;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs95, %r497, %r496;

	// end inline asm
	mov.b32 	%r498, %f4842;
	mov.b32 	%r499, %f4843;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs96, %r499, %r498;

	// end inline asm
	mov.b32 	%r500, %f4844;
	mov.b32 	%r501, %f4845;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs97, %r501, %r500;

	// end inline asm
	mov.b32 	%r502, %f4846;
	mov.b32 	%r503, %f4847;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs98, %r503, %r502;

	// end inline asm
	mov.b32 	%r504, %f4848;
	mov.b32 	%r505, %f4849;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs99, %r505, %r504;

	// end inline asm
	mov.b32 	%r506, %f4850;
	mov.b32 	%r507, %f4851;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs100, %r507, %r506;

	// end inline asm
	mov.b32 	%r508, %f4852;
	mov.b32 	%r509, %f4853;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs101, %r509, %r508;

	// end inline asm
	mov.b32 	%r510, %f4854;
	mov.b32 	%r511, %f4855;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs102, %r511, %r510;

	// end inline asm
	mov.b32 	%r512, %f4856;
	mov.b32 	%r513, %f4857;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs103, %r513, %r512;

	// end inline asm
	mov.b32 	%r514, %f4858;
	mov.b32 	%r515, %f4859;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs104, %r515, %r514;

	// end inline asm
	mov.b32 	%r516, %f4860;
	mov.b32 	%r517, %f4861;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs105, %r517, %r516;

	// end inline asm
	mov.b32 	%r518, %f4862;
	mov.b32 	%r519, %f4863;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs106, %r519, %r518;

	// end inline asm
	mov.b32 	%r520, %f4864;
	mov.b32 	%r521, %f4865;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs107, %r521, %r520;

	// end inline asm
	mov.b32 	%r522, %f4866;
	mov.b32 	%r523, %f4867;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs108, %r523, %r522;

	// end inline asm
	mov.b32 	%r524, %f4868;
	mov.b32 	%r525, %f4869;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs109, %r525, %r524;

	// end inline asm
	mov.b32 	%r526, %f4870;
	mov.b32 	%r527, %f4871;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs110, %r527, %r526;

	// end inline asm
	mov.b32 	%r528, %f4872;
	mov.b32 	%r529, %f4873;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs111, %r529, %r528;

	// end inline asm
	mov.b32 	%r530, %f4874;
	mov.b32 	%r531, %f4875;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs112, %r531, %r530;

	// end inline asm
	mov.b32 	%r532, %f4876;
	mov.b32 	%r533, %f4877;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs113, %r533, %r532;

	// end inline asm
	mov.b32 	%r534, %f4878;
	mov.b32 	%r535, %f4879;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs114, %r535, %r534;

	// end inline asm
	mov.b32 	%r536, %f4880;
	mov.b32 	%r537, %f4881;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs115, %r537, %r536;

	// end inline asm
	mov.b32 	%r538, %f4882;
	mov.b32 	%r539, %f4883;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs116, %r539, %r538;

	// end inline asm
	mov.b32 	%r540, %f4884;
	mov.b32 	%r541, %f4885;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs117, %r541, %r540;

	// end inline asm
	mov.b32 	%r542, %f4886;
	mov.b32 	%r543, %f4887;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs118, %r543, %r542;

	// end inline asm
	mov.b32 	%r544, %f4888;
	mov.b32 	%r545, %f4889;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs119, %r545, %r544;

	// end inline asm
	mov.b32 	%r546, %f4890;
	mov.b32 	%r547, %f4891;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs120, %r547, %r546;

	// end inline asm
	mov.b32 	%r548, %f4892;
	mov.b32 	%r549, %f4893;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs121, %r549, %r548;

	// end inline asm
	mov.b32 	%r550, %f4894;
	mov.b32 	%r551, %f4895;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs122, %r551, %r550;

	// end inline asm
	mov.b32 	%r552, %f4896;
	mov.b32 	%r553, %f4897;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs123, %r553, %r552;

	// end inline asm
	mov.b32 	%r554, %f4898;
	mov.b32 	%r555, %f4899;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs124, %r555, %r554;

	// end inline asm
	mov.b32 	%r556, %f4900;
	mov.b32 	%r557, %f4901;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs125, %r557, %r556;

	// end inline asm
	mov.b32 	%r558, %f4902;
	mov.b32 	%r559, %f4903;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs126, %r559, %r558;

	// end inline asm
	mov.b32 	%r560, %f4904;
	mov.b32 	%r561, %f4905;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs127, %r561, %r560;

	// end inline asm
	mov.b32 	%r562, %f4906;
	mov.b32 	%r563, %f4907;
	// begin inline asm
	cvt.rn.satfinite.e4m3x2.f32  %rs128, %r563, %r562;

	// end inline asm
	.loc	1 109 61                        // 10-persistent-matmul-WS.py:109:61
	// begin inline asm
	cp.async.bulk.wait_group.read 0x0;
	// end inline asm
	st.shared.u16 	[%r28], %rs1;
	st.shared.u16 	[%r28+1024], %rs2;
	st.shared.u16 	[%r28+8], %rs3;
	st.shared.u16 	[%r30+8], %rs4;
	st.shared.u16 	[%r31], %rs5;
	st.shared.u16 	[%r31+1024], %rs6;
	st.shared.u16 	[%r33], %rs7;
	st.shared.u16 	[%r33+1024], %rs8;
	st.shared.u16 	[%r35], %rs9;
	st.shared.u16 	[%r35+1024], %rs10;
	st.shared.u16 	[%r37], %rs11;
	st.shared.u16 	[%r37+1024], %rs12;
	st.shared.u16 	[%r39], %rs13;
	st.shared.u16 	[%r39+1024], %rs14;
	st.shared.u16 	[%r41], %rs15;
	st.shared.u16 	[%r41+1024], %rs16;
	st.shared.u16 	[%r43], %rs17;
	st.shared.u16 	[%r43+1024], %rs18;
	st.shared.u16 	[%r45], %rs19;
	st.shared.u16 	[%r45+1024], %rs20;
	st.shared.u16 	[%r47], %rs21;
	st.shared.u16 	[%r47+1024], %rs22;
	st.shared.u16 	[%r49], %rs23;
	st.shared.u16 	[%r49+1024], %rs24;
	st.shared.u16 	[%r51], %rs25;
	st.shared.u16 	[%r51+1024], %rs26;
	st.shared.u16 	[%r53], %rs27;
	st.shared.u16 	[%r53+1024], %rs28;
	st.shared.u16 	[%r55], %rs29;
	st.shared.u16 	[%r55+1024], %rs30;
	st.shared.u16 	[%r57], %rs31;
	st.shared.u16 	[%r57+1024], %rs32;
	st.shared.u16 	[%r28+16384], %rs33;
	st.shared.u16 	[%r28+17408], %rs34;
	st.shared.u16 	[%r59+8], %rs35;
	st.shared.u16 	[%r60+8], %rs36;
	st.shared.u16 	[%r31+16384], %rs37;
	st.shared.u16 	[%r31+17408], %rs38;
	st.shared.u16 	[%r33+16384], %rs39;
	st.shared.u16 	[%r33+17408], %rs40;
	st.shared.u16 	[%r35+16384], %rs41;
	st.shared.u16 	[%r35+17408], %rs42;
	st.shared.u16 	[%r37+16384], %rs43;
	st.shared.u16 	[%r37+17408], %rs44;
	st.shared.u16 	[%r39+16384], %rs45;
	st.shared.u16 	[%r39+17408], %rs46;
	st.shared.u16 	[%r41+16384], %rs47;
	st.shared.u16 	[%r41+17408], %rs48;
	st.shared.u16 	[%r43+16384], %rs49;
	st.shared.u16 	[%r43+17408], %rs50;
	st.shared.u16 	[%r45+16384], %rs51;
	st.shared.u16 	[%r45+17408], %rs52;
	st.shared.u16 	[%r47+16384], %rs53;
	st.shared.u16 	[%r47+17408], %rs54;
	st.shared.u16 	[%r49+16384], %rs55;
	st.shared.u16 	[%r49+17408], %rs56;
	st.shared.u16 	[%r51+16384], %rs57;
	st.shared.u16 	[%r51+17408], %rs58;
	st.shared.u16 	[%r53+16384], %rs59;
	st.shared.u16 	[%r53+17408], %rs60;
	st.shared.u16 	[%r55+16384], %rs61;
	st.shared.u16 	[%r55+17408], %rs62;
	st.shared.u16 	[%r57+16384], %rs63;
	st.shared.u16 	[%r57+17408], %rs64;
	st.shared.u16 	[%r28+8192], %rs65;
	st.shared.u16 	[%r28+9216], %rs66;
	st.shared.u16 	[%r61+8], %rs67;
	st.shared.u16 	[%r62+8], %rs68;
	st.shared.u16 	[%r31+8192], %rs69;
	st.shared.u16 	[%r31+9216], %rs70;
	st.shared.u16 	[%r33+8192], %rs71;
	st.shared.u16 	[%r33+9216], %rs72;
	st.shared.u16 	[%r35+8192], %rs73;
	st.shared.u16 	[%r35+9216], %rs74;
	st.shared.u16 	[%r37+8192], %rs75;
	st.shared.u16 	[%r37+9216], %rs76;
	st.shared.u16 	[%r39+8192], %rs77;
	st.shared.u16 	[%r39+9216], %rs78;
	st.shared.u16 	[%r41+8192], %rs79;
	st.shared.u16 	[%r41+9216], %rs80;
	st.shared.u16 	[%r43+8192], %rs81;
	st.shared.u16 	[%r43+9216], %rs82;
	st.shared.u16 	[%r45+8192], %rs83;
	st.shared.u16 	[%r45+9216], %rs84;
	st.shared.u16 	[%r47+8192], %rs85;
	st.shared.u16 	[%r47+9216], %rs86;
	st.shared.u16 	[%r49+8192], %rs87;
	st.shared.u16 	[%r49+9216], %rs88;
	st.shared.u16 	[%r51+8192], %rs89;
	st.shared.u16 	[%r51+9216], %rs90;
	st.shared.u16 	[%r53+8192], %rs91;
	st.shared.u16 	[%r53+9216], %rs92;
	st.shared.u16 	[%r55+8192], %rs93;
	st.shared.u16 	[%r55+9216], %rs94;
	st.shared.u16 	[%r57+8192], %rs95;
	st.shared.u16 	[%r57+9216], %rs96;
	st.shared.u16 	[%r28+24576], %rs97;
	st.shared.u16 	[%r28+25600], %rs98;
	st.shared.u16 	[%r63+8], %rs99;
	st.shared.u16 	[%r64+8], %rs100;
	st.shared.u16 	[%r31+24576], %rs101;
	st.shared.u16 	[%r31+25600], %rs102;
	st.shared.u16 	[%r33+24576], %rs103;
	st.shared.u16 	[%r33+25600], %rs104;
	st.shared.u16 	[%r35+24576], %rs105;
	st.shared.u16 	[%r35+25600], %rs106;
	st.shared.u16 	[%r37+24576], %rs107;
	st.shared.u16 	[%r37+25600], %rs108;
	st.shared.u16 	[%r39+24576], %rs109;
	st.shared.u16 	[%r39+25600], %rs110;
	st.shared.u16 	[%r41+24576], %rs111;
	st.shared.u16 	[%r41+25600], %rs112;
	st.shared.u16 	[%r43+24576], %rs113;
	st.shared.u16 	[%r43+25600], %rs114;
	st.shared.u16 	[%r45+24576], %rs115;
	st.shared.u16 	[%r45+25600], %rs116;
	st.shared.u16 	[%r47+24576], %rs117;
	st.shared.u16 	[%r47+25600], %rs118;
	st.shared.u16 	[%r49+24576], %rs119;
	st.shared.u16 	[%r49+25600], %rs120;
	st.shared.u16 	[%r51+24576], %rs121;
	st.shared.u16 	[%r51+25600], %rs122;
	st.shared.u16 	[%r53+24576], %rs123;
	st.shared.u16 	[%r53+25600], %rs124;
	st.shared.u16 	[%r55+24576], %rs125;
	st.shared.u16 	[%r55+25600], %rs126;
	st.shared.u16 	[%r57+24576], %rs127;
	st.shared.u16 	[%r57+25600], %rs128;
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32	%r567, %r9, 0, 31, -1;
	shl.b32 	%r568, %r567, 14;
	add.s32 	%r570, %r98, %r568;
	add.s32 	%r566, %r570, 197632;
	shl.b32 	%r571, %r567, 7;
	add.s32 	%r564, %r571, %r586;
	// begin inline asm
	@%p46 cp.async.bulk.tensor.2d.global.shared::cta.bulk_group [%rd39, {%r564, %r588}], [%r566];
	// end inline asm
	// begin inline asm
	cp.async.bulk.commit_group ;
	// end inline asm
	mov.f32 	%f4652, %f4132;
	mov.f32 	%f4653, %f4132;
	mov.f32 	%f4654, %f4132;
	mov.f32 	%f4655, %f4132;
	mov.f32 	%f4656, %f4132;
	mov.f32 	%f4657, %f4132;
	mov.f32 	%f4658, %f4132;
	mov.f32 	%f4659, %f4132;
	mov.f32 	%f4660, %f4132;
	mov.f32 	%f4661, %f4132;
	mov.f32 	%f4662, %f4132;
	mov.f32 	%f4663, %f4132;
	mov.f32 	%f4664, %f4132;
	mov.f32 	%f4665, %f4132;
	mov.f32 	%f4666, %f4132;
	mov.f32 	%f4667, %f4132;
	mov.f32 	%f4668, %f4132;
	mov.f32 	%f4669, %f4132;
	mov.f32 	%f4670, %f4132;
	mov.f32 	%f4671, %f4132;
	mov.f32 	%f4672, %f4132;
	mov.f32 	%f4673, %f4132;
	mov.f32 	%f4674, %f4132;
	mov.f32 	%f4675, %f4132;
	mov.f32 	%f4676, %f4132;
	mov.f32 	%f4677, %f4132;
	mov.f32 	%f4678, %f4132;
	mov.f32 	%f4679, %f4132;
	mov.f32 	%f4680, %f4132;
	mov.f32 	%f4681, %f4132;
	mov.f32 	%f4682, %f4132;
	mov.f32 	%f4683, %f4132;
	mov.f32 	%f4684, %f4132;
	mov.f32 	%f4685, %f4132;
	mov.f32 	%f4686, %f4132;
	mov.f32 	%f4687, %f4132;
	mov.f32 	%f4688, %f4132;
	mov.f32 	%f4689, %f4132;
	mov.f32 	%f4690, %f4132;
	mov.f32 	%f4691, %f4132;
	mov.f32 	%f4692, %f4132;
	mov.f32 	%f4693, %f4132;
	mov.f32 	%f4694, %f4132;
	mov.f32 	%f4695, %f4132;
	mov.f32 	%f4696, %f4132;
	mov.f32 	%f4697, %f4132;
	mov.f32 	%f4698, %f4132;
	mov.f32 	%f4699, %f4132;
	mov.f32 	%f4700, %f4132;
	mov.f32 	%f4701, %f4132;
	mov.f32 	%f4702, %f4132;
	mov.f32 	%f4703, %f4132;
	mov.f32 	%f4704, %f4132;
	mov.f32 	%f4705, %f4132;
	mov.f32 	%f4706, %f4132;
	mov.f32 	%f4707, %f4132;
	mov.f32 	%f4708, %f4132;
	mov.f32 	%f4709, %f4132;
	mov.f32 	%f4710, %f4132;
	mov.f32 	%f4711, %f4132;
	mov.f32 	%f4712, %f4132;
	mov.f32 	%f4713, %f4132;
	mov.f32 	%f4714, %f4132;
	mov.f32 	%f4715, %f4132;
	mov.f32 	%f4716, %f4132;
	mov.f32 	%f4717, %f4132;
	mov.f32 	%f4718, %f4132;
	mov.f32 	%f4719, %f4132;
	mov.f32 	%f4720, %f4132;
	mov.f32 	%f4721, %f4132;
	mov.f32 	%f4722, %f4132;
	mov.f32 	%f4723, %f4132;
	mov.f32 	%f4724, %f4132;
	mov.f32 	%f4725, %f4132;
	mov.f32 	%f4726, %f4132;
	mov.f32 	%f4727, %f4132;
	mov.f32 	%f4728, %f4132;
	mov.f32 	%f4729, %f4132;
	mov.f32 	%f4730, %f4132;
	mov.f32 	%f4731, %f4132;
	mov.f32 	%f4732, %f4132;
	mov.f32 	%f4733, %f4132;
	mov.f32 	%f4734, %f4132;
	mov.f32 	%f4735, %f4132;
	mov.f32 	%f4736, %f4132;
	mov.f32 	%f4737, %f4132;
	mov.f32 	%f4738, %f4132;
	mov.f32 	%f4739, %f4132;
	mov.f32 	%f4740, %f4132;
	mov.f32 	%f4741, %f4132;
	mov.f32 	%f4742, %f4132;
	mov.f32 	%f4743, %f4132;
	mov.f32 	%f4744, %f4132;
	mov.f32 	%f4745, %f4132;
	mov.f32 	%f4746, %f4132;
	mov.f32 	%f4747, %f4132;
	mov.f32 	%f4748, %f4132;
	mov.f32 	%f4749, %f4132;
	mov.f32 	%f4750, %f4132;
	mov.f32 	%f4751, %f4132;
	mov.f32 	%f4752, %f4132;
	mov.f32 	%f4753, %f4132;
	mov.f32 	%f4754, %f4132;
	mov.f32 	%f4755, %f4132;
	mov.f32 	%f4756, %f4132;
	mov.f32 	%f4757, %f4132;
	mov.f32 	%f4758, %f4132;
	mov.f32 	%f4759, %f4132;
	mov.f32 	%f4760, %f4132;
	mov.f32 	%f4761, %f4132;
	mov.f32 	%f4762, %f4132;
	mov.f32 	%f4763, %f4132;
	mov.f32 	%f4764, %f4132;
	mov.f32 	%f4765, %f4132;
	mov.f32 	%f4766, %f4132;
	mov.f32 	%f4767, %f4132;
	mov.f32 	%f4768, %f4132;
	mov.f32 	%f4769, %f4132;
	mov.f32 	%f4770, %f4132;
	mov.f32 	%f4771, %f4132;
	mov.f32 	%f4772, %f4132;
	mov.f32 	%f4773, %f4132;
	mov.f32 	%f4774, %f4132;
	mov.f32 	%f4775, %f4132;
	mov.f32 	%f4776, %f4132;
	mov.f32 	%f4777, %f4132;
	mov.f32 	%f4778, %f4132;
	mov.f32 	%f4779, %f4132;
	mov.f32 	%f4780, %f4132;
	mov.f32 	%f4781, %f4132;
	mov.f32 	%f4782, %f4132;
	mov.f32 	%f4783, %f4132;
	mov.f32 	%f4784, %f4132;
	mov.f32 	%f4785, %f4132;
	mov.f32 	%f4786, %f4132;
	mov.f32 	%f4787, %f4132;
	mov.f32 	%f4788, %f4132;
	mov.f32 	%f4789, %f4132;
	mov.f32 	%f4790, %f4132;
	mov.f32 	%f4791, %f4132;
	mov.f32 	%f4792, %f4132;
	mov.f32 	%f4793, %f4132;
	mov.f32 	%f4794, %f4132;
	mov.f32 	%f4795, %f4132;
	mov.f32 	%f4796, %f4132;
	mov.f32 	%f4797, %f4132;
	mov.f32 	%f4798, %f4132;
	mov.f32 	%f4799, %f4132;
	mov.f32 	%f4800, %f4132;
	mov.f32 	%f4801, %f4132;
	mov.f32 	%f4802, %f4132;
	mov.f32 	%f4803, %f4132;
	mov.f32 	%f4804, %f4132;
	mov.f32 	%f4805, %f4132;
	mov.f32 	%f4806, %f4132;
	mov.f32 	%f4807, %f4132;
	mov.f32 	%f4808, %f4132;
	mov.f32 	%f4809, %f4132;
	mov.f32 	%f4810, %f4132;
	mov.f32 	%f4811, %f4132;
	mov.f32 	%f4812, %f4132;
	mov.f32 	%f4813, %f4132;
	mov.f32 	%f4814, %f4132;
	mov.f32 	%f4815, %f4132;
	mov.f32 	%f4816, %f4132;
	mov.f32 	%f4817, %f4132;
	mov.f32 	%f4818, %f4132;
	mov.f32 	%f4819, %f4132;
	mov.f32 	%f4820, %f4132;
	mov.f32 	%f4821, %f4132;
	mov.f32 	%f4822, %f4132;
	mov.f32 	%f4823, %f4132;
	mov.f32 	%f4824, %f4132;
	mov.f32 	%f4825, %f4132;
	mov.f32 	%f4826, %f4132;
	mov.f32 	%f4827, %f4132;
	mov.f32 	%f4828, %f4132;
	mov.f32 	%f4829, %f4132;
	mov.f32 	%f4830, %f4132;
	mov.f32 	%f4831, %f4132;
	mov.f32 	%f4832, %f4132;
	mov.f32 	%f4833, %f4132;
	mov.f32 	%f4834, %f4132;
	mov.f32 	%f4835, %f4132;
	mov.f32 	%f4836, %f4132;
	mov.f32 	%f4837, %f4132;
	mov.f32 	%f4838, %f4132;
	mov.f32 	%f4839, %f4132;
	mov.f32 	%f4840, %f4132;
	mov.f32 	%f4841, %f4132;
	mov.f32 	%f4842, %f4132;
	mov.f32 	%f4843, %f4132;
	mov.f32 	%f4844, %f4132;
	mov.f32 	%f4845, %f4132;
	mov.f32 	%f4846, %f4132;
	mov.f32 	%f4847, %f4132;
	mov.f32 	%f4848, %f4132;
	mov.f32 	%f4849, %f4132;
	mov.f32 	%f4850, %f4132;
	mov.f32 	%f4851, %f4132;
	mov.f32 	%f4852, %f4132;
	mov.f32 	%f4853, %f4132;
	mov.f32 	%f4854, %f4132;
	mov.f32 	%f4855, %f4132;
	mov.f32 	%f4856, %f4132;
	mov.f32 	%f4857, %f4132;
	mov.f32 	%f4858, %f4132;
	mov.f32 	%f4859, %f4132;
	mov.f32 	%f4860, %f4132;
	mov.f32 	%f4861, %f4132;
	mov.f32 	%f4862, %f4132;
	mov.f32 	%f4863, %f4132;
	mov.f32 	%f4864, %f4132;
	mov.f32 	%f4865, %f4132;
	mov.f32 	%f4866, %f4132;
	mov.f32 	%f4867, %f4132;
	mov.f32 	%f4868, %f4132;
	mov.f32 	%f4869, %f4132;
	mov.f32 	%f4870, %f4132;
	mov.f32 	%f4871, %f4132;
	mov.f32 	%f4872, %f4132;
	mov.f32 	%f4873, %f4132;
	mov.f32 	%f4874, %f4132;
	mov.f32 	%f4875, %f4132;
	mov.f32 	%f4876, %f4132;
	mov.f32 	%f4877, %f4132;
	mov.f32 	%f4878, %f4132;
	mov.f32 	%f4879, %f4132;
	mov.f32 	%f4880, %f4132;
	mov.f32 	%f4881, %f4132;
	mov.f32 	%f4882, %f4132;
	mov.f32 	%f4883, %f4132;
	mov.f32 	%f4884, %f4132;
	mov.f32 	%f4885, %f4132;
	mov.f32 	%f4886, %f4132;
	mov.f32 	%f4887, %f4132;
	mov.f32 	%f4888, %f4132;
	mov.f32 	%f4889, %f4132;
	mov.f32 	%f4890, %f4132;
	mov.f32 	%f4891, %f4132;
	mov.f32 	%f4892, %f4132;
	mov.f32 	%f4893, %f4132;
	mov.f32 	%f4894, %f4132;
	mov.f32 	%f4895, %f4132;
	mov.f32 	%f4896, %f4132;
	mov.f32 	%f4897, %f4132;
	mov.f32 	%f4898, %f4132;
	mov.f32 	%f4899, %f4132;
	mov.f32 	%f4900, %f4132;
	mov.f32 	%f4901, %f4132;
	mov.f32 	%f4902, %f4132;
	mov.f32 	%f4903, %f4132;
	mov.f32 	%f4904, %f4132;
	mov.f32 	%f4905, %f4132;
	mov.f32 	%f4906, %f4132;
	mov.f32 	%f4907, %f4132;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %._crit_edge
	.loc	1 87 22                         // 10-persistent-matmul-WS.py:87:22
	// begin inline asm
	cp.async.bulk.wait_group.read 0x0;
	// end inline asm
	// begin inline asm
	// wait for regs: %f4652,%f4653,%f4654,%f4655,%f4656,%f4657,%f4658,%f4659,%f4660,%f4661,%f4662,%f4663,%f4664,%f4665,%f4666,%f4667,%f4668,%f4669,%f4670,%f4671,%f4672,%f4673,%f4674,%f4675,%f4676,%f4677,%f4678,%f4679,%f4680,%f4681,%f4682,%f4683,%f4684,%f4685,%f4686,%f4687,%f4688,%f4689,%f4690,%f4691,%f4692,%f4693,%f4694,%f4695,%f4696,%f4697,%f4698,%f4699,%f4700,%f4701,%f4702,%f4703,%f4704,%f4705,%f4706,%f4707,%f4708,%f4709,%f4710,%f4711,%f4712,%f4713,%f4714,%f4715,%f4716,%f4717,%f4718,%f4719,%f4720,%f4721,%f4722,%f4723,%f4724,%f4725,%f4726,%f4727,%f4728,%f4729,%f4730,%f4731,%f4732,%f4733,%f4734,%f4735,%f4736,%f4737,%f4738,%f4739,%f4740,%f4741,%f4742,%f4743,%f4744,%f4745,%f4746,%f4747,%f4748,%f4749,%f4750,%f4751,%f4752,%f4753,%f4754,%f4755,%f4756,%f4757,%f4758,%f4759,%f4760,%f4761,%f4762,%f4763,%f4764,%f4765,%f4766,%f4767,%f4768,%f4769,%f4770,%f4771,%f4772,%f4773,%f4774,%f4775,%f4776,%f4777,%f4778,%f4779,%f4780,%f4781,%f4782,%f4783,%f4784,%f4785,%f4786,%f4787,%f4788,%f4789,%f4790,%f4791,%f4792,%f4793,%f4794,%f4795,%f4796,%f4797,%f4798,%f4799,%f4800,%f4801,%f4802,%f4803,%f4804,%f4805,%f4806,%f4807,%f4808,%f4809,%f4810,%f4811,%f4812,%f4813,%f4814,%f4815,%f4816,%f4817,%f4818,%f4819,%f4820,%f4821,%f4822,%f4823,%f4824,%f4825,%f4826,%f4827,%f4828,%f4829,%f4830,%f4831,%f4832,%f4833,%f4834,%f4835,%f4836,%f4837,%f4838,%f4839,%f4840,%f4841,%f4842,%f4843,%f4844,%f4845,%f4846,%f4847,%f4848,%f4849,%f4850,%f4851,%f4852,%f4853,%f4854,%f4855,%f4856,%f4857,%f4858,%f4859,%f4860,%f4861,%f4862,%f4863,%f4864,%f4865,%f4866,%f4867,%f4868,%f4869,%f4870,%f4871,%f4872,%f4873,%f4874,%f4875,%f4876,%f4877,%f4878,%f4879,%f4880,%f4881,%f4882,%f4883,%f4884,%f4885,%f4886,%f4887,%f4888,%f4889,%f4890,%f4891,%f4892,%f4893,%f4894,%f4895,%f4896,%f4897,%f4898,%f4899,%f4900,%f4901,%f4902,%f4903,%f4904,%f4905,%f4906,%f4907
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p48 mbarrier.inval.shared::cta.b64 [%r93];
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p48 mbarrier.inval.shared::cta.b64 [%r157];
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p48 mbarrier.inval.shared::cta.b64 [%r178];
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p48 mbarrier.inval.shared::cta.b64 [%r96];
	// end inline asm
	.loc	1 87 4                          // 10-persistent-matmul-WS.py:87:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/hoy/triton/python/tutorials/10-persistent-matmul-WS.py"
	.file	2 "/home/hoy/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 200                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 49                                  // DW_AT_name
.b8 48
.b8 45
.b8 112
.b8 101
.b8 114
.b8 115
.b8 105
.b8 115
.b8 116
.b8 101
.b8 110
.b8 116
.b8 45
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 45
.b8 87
.b8 83
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 104
.b8 111
.b8 121
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 47
.b8 116
.b8 117
.b8 116
.b8 111
.b8 114
.b8 105
.b8 97
.b8 108
.b8 115
.b8 0
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b8 2                                   // Abbrev [2] 0x66:0x1f DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 116
.b8 109
.b8 97
.b8 95
.b8 112
.b8 101
.b8 114
.b8 115
.b8 105
.b8 115
.b8 116
.b8 101
.b8 110
.b8 116
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x85:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 102                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9a:0x18 DW_TAG_inlined_subroutine
.b32 102                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 102                                // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 68                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_loc	{	}
